{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\abdul.mohammed\\\\Work\\\\Learn\\\\lvl_5\\\\Banking_dapp\\\\BankingSystem-Dapp\\\\src\\\\components\\\\Branch.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { Button, Form } from \"semantic-ui-react\";\nimport { useState } from \"react\";\nimport { useEffect } from \"react\";\nimport { Header, Icon, Image, Segment, Divider, Table, Breadcrumb } from \"semantic-ui-react\";\nimport { contractAddressFed, ABIFed } from \"../constants\";\nimport { contractAddressEcb, ABIEcb } from \"../constants\";\nimport { contractAddressbnksys, ABIbnksys } from \"../constants\";\nimport { Card } from \"semantic-ui-react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst colors = [\"black\"];\nconst Web3 = require(\"web3\");\nconst ethers = require(\"ethers\");\nfunction Branch() {\n  _s();\n  const [bankid, setBankID] = useState(\"\");\n  const [branchid, setBranchID] = useState(\"\");\n  const [amount, setAmount] = useState(\"\");\n  const [tokenSymbol, setTokenSymbol] = useState(\"\");\n  const [clientaddress, setClientAddress] = useState(\"\");\n  const [centralbankid, setCentralBankID] = useState(\"\");\n  const [arrayData, setArrayData] = useState([]);\n  const [arrayDataForexDet, setArrayDataForexDet] = useState([]);\n  const [arrayDataBorrowDet, setArrayBorrowDet] = useState([]);\n  const [arrayDataBorrowDispDet, setArrayBorrowDispDet] = useState([]);\n  const [newarrayData, setNewArrayData] = useState([]);\n  const [balancebranch, setBalanceBranch] = useState(\"\");\n  const [symbolbranch, setSymbolBranch] = useState(\"\");\n  const [detailsbranchid, setDetailsBranchID] = useState(\"\");\n  const [isconnectbuttonclicked, setIsConnectButtonClicked] = useState(false);\n  const [isApprovedButton, setIsApprovedButton] = useState(false);\n  useEffect(() => {\n    let temp_data = window.localStorage.getItem(\"DataC\");\n    if (temp_data) {\n      temp_data = JSON.parse(temp_data);\n      setArrayData(temp_data);\n    }\n    let temp_data_frx_det = window.localStorage.getItem(\"DataFrxDet\");\n    if (temp_data_frx_det) {\n      temp_data_frx_det = JSON.parse(temp_data_frx_det);\n      setArrayDataForexDet(temp_data_frx_det);\n    }\n    let temp_data_brr_det = window.localStorage.getItem(\"DataBrrDet\");\n    if (temp_data_brr_det) {\n      temp_data_brr_det = JSON.parse(temp_data_brr_det);\n      setArrayBorrowDet(temp_data_brr_det);\n    }\n    let temp_data_disp_brr_det = window.localStorage.getItem(\"DataBrrDispDet\");\n    if (temp_data_disp_brr_det) {\n      temp_data_disp_brr_det = JSON.parse(temp_data_disp_brr_det);\n      setArrayBorrowDispDet(temp_data_disp_brr_det);\n    }\n    if (temp_data && temp_data_frx_det && temp_data_brr_det) return;\n  }, [arrayData, arrayDataForexDet, setArrayBorrowDet]);\n  async function addClient() {\n    try {\n      if (typeof window !== \"undefined\" && typeof window.ethereum !== \"undefined\") {\n        const accounts = await window.ethereum.enable();\n        console.log(\"accounts\", accounts);\n        const provider = await new ethers.providers.Web3Provider(window.ethereum);\n        const signer = await provider.getSigner();\n        console.log(\"Signer\", signer);\n        const address = await signer.getAddress();\n        console.log(address);\n      } else {\n        console.log(\"MemtaMask Not Installed!!!\");\n      }\n      const web3eth = new Web3(Web3.givenProvider);\n      const callContract = new web3eth.eth.Contract(ABIbnksys, contractAddressbnksys);\n      const callContractECB = new web3eth.eth.Contract(ABIEcb, contractAddressEcb);\n      const callContractFED = new web3eth.eth.Contract(ABIFed, contractAddressFed);\n      if (web3eth.givenProvider) {\n        console.log(\"Hello Provider Here\", web3eth.givenProvider);\n        let address = web3eth.givenProvider.selectedAddress;\n        console.log(\"address\", address);\n        let IDByAddress = await callContract.methods.idOfAddress(address).call();\n        if (IDByAddress.bankId == 0) {\n          setTokenSymbol(\"EUR\");\n          let responseEcb = await callContractECB.methods.approve(contractAddressbnksys, 100000000000).send({\n            from: address,\n            gas: 1000000\n          });\n          console.log(\"Response :\", responseEcb);\n          let response = await callContract.methods.addClient(IDByAddress.bankId, branchid, clientaddress, amount * 100000000, \"EUR\").send({\n            from: address,\n            gas: 1000000\n          });\n          console.log(response);\n          let clientid1 = await callContract.methods.clientCount(IDByAddress.bankId, branchid).call();\n          let clientDetails1 = await callContract.methods.clients(IDByAddress.bankId, clientid1 - 1).call();\n          console.log(\"clientid1:\", clientid1);\n          console.log(\"clientDetails1:\", clientDetails1);\n          let tmp_data = arrayData;\n          tmp_data.push(clientDetails1);\n          console.log(tmp_data);\n          setArrayData(tmp_data);\n          window.localStorage.setItem(\"DataC\", JSON.stringify(tmp_data));\n          console.log(\"arrayData:\", arrayData);\n          console.log(\"arrayData:\", arrayData[0].amount);\n          console.log(\"arrayData:\", arrayData[0].client);\n        } else {\n          setTokenSymbol(\"USD\");\n          let responseFed = await callContractFED.methods.approve(contractAddressbnksys, amount * 100000000).send({\n            from: address,\n            gas: 1000000\n          });\n          console.log(\"Response :\", responseFed);\n          let response = await callContract.methods.addClient(IDByAddress.bankId, branchid, clientaddress, amount * 100000000, \"USD\").send({\n            from: address,\n            gas: 1000000\n          });\n          console.log(response);\n          let clientid2 = await callContract.methods.clientCount(IDByAddress.bankId, branchid).call();\n          let clientDetails2 = await callContract.methods.clients(IDByAddress.bankId, clientid2 - 1).call();\n          console.log(\"clientid1:\", clientid2);\n          console.log(\"clientDetails1:\", clientDetails2);\n          let tmp_data = arrayData;\n          tmp_data.push(clientDetails2);\n          console.log(tmp_data);\n          setArrayData(tmp_data);\n          window.localStorage.setItem(\"DataC\", JSON.stringify(tmp_data));\n          console.log(\"arrayData:\", arrayData);\n          console.log(\"arrayData:\", arrayData[0].amount);\n          console.log(\"arrayData:\", arrayData[0].client);\n        }\n      }\n    } catch (error) {\n      console.log(Error);\n    }\n  }\n  async function checkForexRequest() {\n    try {\n      if (typeof window !== \"undefined\" && typeof window.ethereum !== \"undefined\") {\n        const accounts = await window.ethereum.enable();\n        console.log(\"accounts\", accounts);\n        const provider = await new ethers.providers.Web3Provider(window.ethereum);\n        const signer = await provider.getSigner();\n        console.log(\"Signer\", signer);\n        const address = await signer.getAddress();\n        console.log(address);\n      } else {\n        console.log(\"MemtaMask Not Installed Maen\");\n      }\n      const web3eth = new Web3(Web3.givenProvider);\n      const callContract = new web3eth.eth.Contract(ABIbnksys, contractAddressbnksys);\n      const callContractECB = new web3eth.eth.Contract(ABIEcb, contractAddressEcb);\n      const callContractFED = new web3eth.eth.Contract(ABIFed, contractAddressFed);\n      if (web3eth.givenProvider) {\n        console.log(\"Hello Provider Here\", web3eth.givenProvider);\n        let address = web3eth.givenProvider.selectedAddress;\n        console.log(\"address\", address);\n        let IDByAddress = await callContract.methods.idOfAddress(address).call();\n        if (IDByAddress.bankId == 0) {\n          setTokenSymbol(\"EUR\");\n          let IDByAddress = await callContract.methods.idOfAddress(address).call();\n          let balanceOf = await callContractECB.methods.balanceOf(address).call();\n          setBalanceBranch(balanceOf);\n          let forexDetails = await callContract.methods.forexDetails(address).call();\n          console.log(\"forexDetails\", forexDetails);\n          let ReqDetailsClient1 = await callContract.methods.requestDetails(forexDetails.byClient, forexDetails.reqId).call();\n          let response = await callContract.methods.sendForexRequestToBank(ReqDetailsClient1.fromBankId, ReqDetailsClient1.fromBranchId, forexDetails.clientId, ReqDetailsClient1.reqId) //Needs Debuging\n          .send({\n            from: address,\n            gas: 1000000\n          });\n          let tmp_data = arrayDataForexDet;\n          tmp_data.push(ReqDetailsClient1);\n          console.log(tmp_data);\n          setArrayDataForexDet(tmp_data);\n          window.localStorage.setItem(\"DataFrxDet\", JSON.stringify(tmp_data));\n          console.log(\"rrayDataForexDet:\", arrayDataForexDet);\n          console.log(\"rrayDataForexDet:\", arrayDataForexDet[0].amount);\n          console.log(\"rrayDataForexDet:\", arrayDataForexDet[0].bank);\n        } else {\n          setTokenSymbol(\"USD\");\n          let balanceOf = await callContractFED.methods.balanceOf(address).call();\n          setBalanceBranch(balanceOf);\n          let IDByAddress = await callContract.methods.idOfAddress(address).call();\n          let forexDetails = await callContract.methods.forexDetails(address).call();\n          console.log(\"forexDetails\", forexDetails);\n          let ReqDetailsClient1 = await callContract.methods.requestDetails(forexDetails.byClient, forexDetails.reqId).call();\n          let response = await callContract.methods.sendForexRequestToBank(ReqDetailsClient1.fromBankId, ReqDetailsClient1.fromBranchId, forexDetails.clientId, ReqDetailsClient1.reqId).send({\n            from: address,\n            gas: 1000000\n          });\n          console.log(\"ReqDetailsAddress :\", forexDetails);\n          console.log(\"ReqDetailsClient1 :\", ReqDetailsClient1);\n\n          // response = {addres: hhkujiiio, status: true, id:555, amount:8885454}\n          let tmp_data = arrayDataForexDet;\n          tmp_data.push(ReqDetailsClient1);\n          console.log(\"tmp_data\", tmp_data);\n          setArrayDataForexDet(tmp_data);\n          window.localStorage.setItem(\"DataFrxDet\", JSON.stringify(tmp_data));\n          console.log(\"arrayDataForexDet:\", arrayDataForexDet[0].amount);\n          console.log(\"arrayDataForexDet:\", arrayDataForexDet[0].bank);\n        }\n      }\n    } catch (error) {\n      console.log(Error);\n    }\n  }\n  async function checkDetails() {\n    try {\n      if (typeof window !== \"undefined\" && typeof window.ethereum !== \"undefined\") {\n        const accounts = await window.ethereum.enable();\n        console.log(\"accounts\", accounts);\n        const provider = await new ethers.providers.Web3Provider(window.ethereum);\n        const signer = await provider.getSigner();\n        console.log(\"Signer\", signer);\n        const address = await signer.getAddress();\n        console.log(address);\n      } else {\n        console.log(\"MemtaMask Not Installed Maen\");\n      }\n      const web3eth = new Web3(Web3.givenProvider);\n      const callContract = new web3eth.eth.Contract(ABIbnksys, contractAddressbnksys);\n      const callContractECB = new web3eth.eth.Contract(ABIEcb, contractAddressEcb);\n      const callContractFED = new web3eth.eth.Contract(ABIFed, contractAddressFed);\n      if (web3eth.givenProvider) {\n        console.log(\"Hello Provider Here\", web3eth.givenProvider);\n        let address = web3eth.givenProvider.selectedAddress;\n        console.log(\"address\", address);\n        let IDByAddress = await callContract.methods.idOfAddress(address).call();\n        if (IDByAddress.bankId == 0) {\n          setTokenSymbol(\"EUR\");\n          let IDByAddress = await callContract.methods.idOfAddress(address).call();\n          setDetailsBranchID(IDByAddress.branchId);\n          let balanceOf = await callContractECB.methods.balanceOf(address).call();\n          setBalanceBranch(balanceOf);\n        } else {\n          setTokenSymbol(\"USD\");\n          let IDByAddress = await callContract.methods.idOfAddress(address).call();\n          setDetailsBranchID(IDByAddress.branchId);\n          let balanceOf = await callContractFED.methods.balanceOf(address).call();\n          setBalanceBranch(balanceOf);\n        }\n      }\n      setIsConnectButtonClicked(true);\n    } catch (error) {\n      console.log(Error);\n    }\n  }\n  async function sendForexRequestBank() {\n    try {\n      if (typeof window !== \"undefined\" && typeof window.ethereum !== \"undefined\") {\n        const accounts = await window.ethereum.enable();\n        console.log(\"accounts\", accounts);\n        const provider = await new ethers.providers.Web3Provider(window.ethereum);\n        const signer = await provider.getSigner();\n        console.log(\"Signer\", signer);\n        const address = await signer.getAddress();\n        console.log(address);\n      } else {\n        console.log(\"MemtaMask Not Installed Maen\");\n      }\n      const web3eth = new Web3(Web3.givenProvider);\n      const callContract = new web3eth.eth.Contract(ABIbnksys, contractAddressbnksys);\n      const callContractECB = new web3eth.eth.Contract(ABIEcb, contractAddressEcb);\n      const callContractFED = new web3eth.eth.Contract(ABIFed, contractAddressFed);\n      if (web3eth.givenProvider) {\n        console.log(\"Hello Provider Here\", web3eth.givenProvider);\n        let address = web3eth.givenProvider.selectedAddress;\n        console.log(\"address\", address);\n        let IDByAddress = await callContract.methods.idOfAddress(address).call();\n        if (IDByAddress.bankId == 0) {\n          setTokenSymbol(\"EUR\");\n          let forexDetails = await callContract.methods.forexDetails(address).call();\n          let response = await callContract.methods.sendForexRequestToBank(IDByAddress.bankId, IDByAddress.branchId, forexDetails.clientId, forexDetails.reqId).send({\n            from: address,\n            gas: 1000000\n          });\n        } else {\n          setTokenSymbol(\"USD\");\n          let IDByAddress = await callContract.methods.idOfAddress(address).call();\n          let forexDetails = await callContract.methods.forexDetails(address).call();\n          let response = await callContract.methods.sendForexRequestToBank(IDByAddress.bankId, IDByAddress.branchId, forexDetails.clientId, forexDetails.reqId).send({\n            from: address,\n            gas: 1000000\n          });\n        }\n      }\n    } catch (error) {\n      console.log(Error);\n    }\n  }\n  async function processForexRequestBranch() {\n    try {\n      if (typeof window !== \"undefined\" && typeof window.ethereum !== \"undefined\") {\n        const accounts = await window.ethereum.enable();\n        console.log(\"accounts\", accounts);\n        const provider = await new ethers.providers.Web3Provider(window.ethereum);\n        const signer = await provider.getSigner();\n        console.log(\"Signer\", signer);\n        const address = await signer.getAddress();\n        console.log(address);\n      } else {\n        console.log(\"MemtaMask Not Installed Maen\");\n      }\n      const web3eth = new Web3(Web3.givenProvider);\n      const callContract = new web3eth.eth.Contract(ABIbnksys, contractAddressbnksys);\n      const callContractECB = new web3eth.eth.Contract(ABIEcb, contractAddressEcb);\n      const callContractFED = new web3eth.eth.Contract(ABIFed, contractAddressFed);\n      if (web3eth.givenProvider) {\n        console.log(\"Hello Provider Here\", web3eth.givenProvider);\n        let address = web3eth.givenProvider.selectedAddress;\n        console.log(\"address\", address);\n        let IDByAddress = await callContract.methods.idOfAddress(address).call();\n        let forexDetails = await callContract.methods.forexDetails(address).call();\n        let IDByAddress2 = await callContract.methods.idOfAddress(forexDetails.toClient).call();\n        let branchDetails = await callContract.methods.branches(IDByAddress2.bankId, IDByAddress2.branchId).call();\n        let requestDetails = await callContract.methods.requestDetails(forexDetails.byClient, forexDetails.reqId).call();\n        if (IDByAddress.bankId == 0) {\n          setTokenSymbol(\"EUR\");\n          let IDByAddress = await callContract.methods.idOfAddress(address).call();\n          let forexDetails = await callContract.methods.forexDetails(address).call();\n          let IDByAddress2 = await callContract.methods.idOfAddress(forexDetails.toClient).call();\n          let branchDetails = await callContract.methods.branches(IDByAddress2.bankId, IDByAddress2.branchId).call();\n          let requestDetails = await callContract.methods.requestDetails(forexDetails.byClient, forexDetails.reqId).call();\n          let responseEcb = await callContractECB.methods.approve(contractAddressbnksys, requestDetails.amountInEur).send({\n            from: address,\n            gas: 1000000\n          });\n          let response = await callContract.methods.processForexRequestByBranch(requestDetails.toBankId, requestDetails.toBranchId, requestDetails.fromBankId, requestDetails.fromBranchId, requestDetails.reqId).send({\n            from: address,\n            gas: 1000000\n          });\n          let tmp_data = arrayDataForexDet;\n          tmp_data.push(requestDetails);\n          console.log(tmp_data);\n          setArrayDataForexDet(tmp_data);\n          window.localStorage.setItem(\"DataFrxDet\", JSON.stringify(tmp_data));\n          console.log(\"rrayDataForexDet:\", arrayDataForexDet);\n          console.log(\"rrayDataForexDet:\", arrayDataForexDet[0].amount);\n          console.log(\"rrayDataForexDet:\", arrayDataForexDet[0].bank);\n        } else {\n          setTokenSymbol(\"USD\");\n          let IDByAddress = await callContract.methods.idOfAddress(address).call();\n          let forexDetails = await callContract.methods.forexDetails(address).call();\n          let IDByAddress2 = await callContract.methods.idOfAddress(forexDetails.toClient).call();\n          let branchDetails = await callContract.methods.branches(IDByAddress2.bankId, IDByAddress2.branchId).call();\n          let requestDetails = await callContract.methods.requestDetails(forexDetails.byClient, forexDetails.reqId).call();\n          let responseFed = await callContractFED.methods.approve(contractAddressbnksys, requestDetails.amountInUsd).send({\n            from: address,\n            gas: 1000000\n          });\n          let response = await callContract.methods.processForexRequestByBranch(requestDetails.toBankId, requestDetails.toBranchId, requestDetails.fromBankId, requestDetails.fromBranchId, requestDetails.reqId).send({\n            from: address,\n            gas: 1000000\n          });\n          let tmp_data = arrayDataForexDet;\n          tmp_data.push(requestDetails);\n          console.log(\"tmp_data\", tmp_data);\n          setArrayDataForexDet(tmp_data);\n          window.localStorage.setItem(\"DataFrxDet\", JSON.stringify(tmp_data));\n          console.log(\"arrayDataForexDet:\", arrayDataForexDet[0].amount);\n          console.log(\"arrayDataForexDet:\", arrayDataForexDet[0].bank);\n        }\n      }\n    } catch (error) {\n      console.log(Error);\n    }\n  }\n  async function checkBorrowRequest() {\n    try {\n      if (typeof window !== \"undefined\" && typeof window.ethereum !== \"undefined\") {\n        const accounts = await window.ethereum.enable();\n        console.log(\"accounts\", accounts);\n        const provider = await new ethers.providers.Web3Provider(window.ethereum);\n        const signer = await provider.getSigner();\n        console.log(\"Signer\", signer);\n        const address = await signer.getAddress();\n        console.log(address);\n      } else {\n        console.log(\"MemtaMask Not Installed Maen\");\n      }\n      const web3eth = new Web3(Web3.givenProvider);\n      const callContract = new web3eth.eth.Contract(ABIbnksys, contractAddressbnksys);\n      const callContractECB = new web3eth.eth.Contract(ABIEcb, contractAddressEcb);\n      const callContractFED = new web3eth.eth.Contract(ABIFed, contractAddressFed);\n      if (web3eth.givenProvider) {\n        console.log(\"Hello Provider Here\", web3eth.givenProvider);\n        let address = web3eth.givenProvider.selectedAddress;\n        console.log(\"address\", address);\n        let IDByAddress = await callContract.methods.idOfAddress(address).call();\n        if (IDByAddress.bankId == 0) {\n          setTokenSymbol(\"EUR\");\n          let IDByAddress = await callContract.methods.idOfAddress(address).call();\n          let borrowDetails = await callContract.methods.borrowDetails(address).call();\n          console.log(\"borrowDetails\", borrowDetails);\n          let positionDetails1 = await callContract.methods.positionDetails(borrowDetails.byClient, borrowDetails.positionId).call();\n          console.log(\"positionDetails1\", positionDetails1);\n          let tmp_data = arrayDataBorrowDispDet;\n          tmp_data.push(positionDetails1);\n          console.log(tmp_data);\n          setArrayBorrowDispDet(tmp_data);\n          window.localStorage.setItem(\"DataBrrDispDet\", JSON.stringify(tmp_data));\n          console.log(\"arrayData:\", arrayData);\n          console.log(\"arrayData:\", arrayData[0].isBorrowed);\n          console.log(\"arrayData:\", arrayData[0].isDone);\n        } else {\n          setTokenSymbol(\"USD\");\n          let IDByAddress = await callContract.methods.idOfAddress(address).call();\n          let borrowDetails = await callContract.methods.borrowDetails(address).call();\n          console.log(\"borrowDetails\", borrowDetails);\n          let positionDetails1 = await callContract.methods.positionDetails(borrowDetails.byClient, borrowDetails.positionId).call();\n          console.log(\"positionDetails1\", positionDetails1);\n          let tmp_data = arrayDataBorrowDispDet;\n          tmp_data.push(positionDetails1);\n          console.log(tmp_data);\n          setArrayBorrowDispDet(tmp_data);\n          window.localStorage.setItem(\"DataBrrDispDet\", JSON.stringify(tmp_data));\n          console.log(\"arrayData:\", arrayData);\n          console.log(\"arrayData:\", arrayData[0].isBorrowed);\n          console.log(\"arrayData:\", arrayData[0].isDone);\n        }\n      }\n    } catch (error) {\n      console.log(Error);\n    }\n  }\n  async function processLoan() {\n    try {\n      if (typeof window !== \"undefined\" && typeof window.ethereum !== \"undefined\") {\n        const accounts = await window.ethereum.enable();\n        console.log(\"accounts\", accounts);\n        const provider = await new ethers.providers.Web3Provider(window.ethereum);\n        const signer = await provider.getSigner();\n        console.log(\"Signer\", signer);\n        const address = await signer.getAddress();\n        console.log(address);\n      } else {\n        console.log(\"MemtaMask Not Installed Maen\");\n      }\n      const web3eth = new Web3(Web3.givenProvider);\n      const callContract = new web3eth.eth.Contract(ABIbnksys, contractAddressbnksys);\n      const callContractECB = new web3eth.eth.Contract(ABIEcb, contractAddressEcb);\n      const callContractFED = new web3eth.eth.Contract(ABIFed, contractAddressFed);\n      if (web3eth.givenProvider) {\n        console.log(\"Hello Provider Here\", web3eth.givenProvider);\n        let address = web3eth.givenProvider.selectedAddress;\n        console.log(\"address\", address);\n        let IDByAddress = await callContract.methods.idOfAddress(address).call();\n        if (IDByAddress.bankId == 0) {\n          setTokenSymbol(\"EUR\");\n          let IDByAddress = await callContract.methods.idOfAddress(address).call();\n          let borrowDetails = await callContract.methods.borrowDetails(address).call();\n          console.log(\"borrowDetails\", borrowDetails);\n          let positionDetails = await callContract.methods.positionDetails(borrowDetails.byClient, borrowDetails.positionId).call();\n          console.log(\"borrowDetails :\", borrowDetails);\n          console.log(\"positionDetails :\", positionDetails);\n          let responseEcb = await callContractECB.methods.approve(contractAddressbnksys, positionDetails.amountBorrowed).send({\n            from: address,\n            gas: 1000000\n          });\n          let response = await callContract.methods.processLoan(positionDetails.bankId, positionDetails.branchId, positionDetails.clientId, positionDetails.positionId).send({\n            from: address,\n            gas: 1000000\n          });\n          let positionDetails1 = await callContract.methods.positionDetails(borrowDetails.byClient, borrowDetails.positionId).call();\n          console.log(\"positionDetails1\", positionDetails1);\n          let tmp_data = arrayDataBorrowDispDet;\n          tmp_data.push(positionDetails1);\n          console.log(tmp_data);\n          setArrayBorrowDispDet(tmp_data);\n          window.localStorage.setItem(\"DataBrrDispDet\", JSON.stringify(tmp_data));\n          console.log(\"arrayData:\", arrayData);\n          console.log(\"arrayData:\", arrayData[0].isBorrowed);\n          console.log(\"arrayData:\", arrayData[0].isDone);\n        } else {\n          setTokenSymbol(\"USD\");\n          let IDByAddress = await callContract.methods.idOfAddress(address).call();\n          let borrowDetails = await callContract.methods.borrowDetails(address).call();\n          console.log(\"borrowDetails\", borrowDetails);\n          let positionDetails = await callContract.methods.positionDetails(borrowDetails.byClient, borrowDetails.positionId).call();\n          console.log(\"borrowDetails :\", borrowDetails);\n          console.log(\"positionDetails :\", positionDetails);\n          let responseFed = await callContractFED.methods.approve(contractAddressbnksys, positionDetails.amountBorrowed).send({\n            from: address,\n            gas: 1000000\n          });\n          let response = await callContract.methods.processLoan(positionDetails.bankId, positionDetails.branchId, positionDetails.clientId, positionDetails.positionId).send({\n            from: address,\n            gas: 1000000\n          });\n          let positionDetails1 = await callContract.methods.positionDetails(borrowDetails.byClient, borrowDetails.positionId).call();\n          console.log(\"positionDetails1\", positionDetails1);\n          let tmp_data = arrayDataBorrowDispDet;\n          tmp_data.push(positionDetails1);\n          console.log(tmp_data);\n          setArrayBorrowDispDet(tmp_data);\n          window.localStorage.setItem(\"DataBrrDispDet\", JSON.stringify(tmp_data));\n          console.log(\"arrayData:\", arrayData);\n          console.log(\"arrayData:\", arrayData[0].isBorrowed);\n          console.log(\"arrayData:\", arrayData[0].isDone);\n        }\n      }\n    } catch (error) {\n      console.log(Error);\n    }\n    setIsApprovedButton(true);\n  }\n  async function approveBorrowRequest() {\n    try {\n      if (typeof window !== \"undefined\" && typeof window.ethereum !== \"undefined\") {\n        const accounts = await window.ethereum.enable();\n        console.log(\"accounts\", accounts);\n        const provider = await new ethers.providers.Web3Provider(window.ethereum);\n        const signer = await provider.getSigner();\n        console.log(\"Signer\", signer);\n        const address = await signer.getAddress();\n        console.log(address);\n      } else {\n        console.log(\"MemtaMask Not Installed Maen\");\n      }\n      const web3eth = new Web3(Web3.givenProvider);\n      const callContract = new web3eth.eth.Contract(ABIbnksys, contractAddressbnksys);\n      const callContractECB = new web3eth.eth.Contract(ABIEcb, contractAddressEcb);\n      const callContractFED = new web3eth.eth.Contract(ABIFed, contractAddressFed);\n      if (web3eth.givenProvider) {\n        console.log(\"Hello Provider Here\", web3eth.givenProvider);\n        let address = web3eth.givenProvider.selectedAddress;\n        console.log(\"address\", address);\n        let IDByAddress = await callContract.methods.idOfAddress(address).call();\n        if (IDByAddress.bankId == 0) {\n          setTokenSymbol(\"EUR\");\n          let borrowDetails = await callContract.methods.borrowDetails(address).call();\n          console.log(\"borrowDetails\", borrowDetails);\n          let positionDetails = await callContract.methods.positionDetails(borrowDetails.byClient, positionDetails.positionId).call();\n          let responseEcb = await callContractECB.methods.approve(contractAddressbnksys, positionDetails.amountBorrowed).send({\n            from: address,\n            gas: 1000000\n          });\n          console.log(\"Response :\", responseEcb);\n          let response = await callContract.methods.processLoan(positionDetails.bankId, positionDetails.branchId, positionDetails.clientId, positionDetails.positionId).send({\n            from: address,\n            gas: 1000000\n          });\n        } else {\n          setTokenSymbol(\"USD\");\n          let borrowDetails = await callContract.methods.borrowDetails(address).call();\n          console.log(\"borrowDetails\", borrowDetails);\n          let positionDetails = await callContract.methods.positionDetails(borrowDetails.byClient, positionDetails.positionId).call();\n          let responseFed = await callContractFED.methods.approve(contractAddressbnksys, positionDetails.amountBorrowed).send({\n            from: address,\n            gas: 1000000\n          });\n          console.log(\"Response :\", responseFed);\n          let response = await callContract.methods.processLoan(positionDetails.bankId, positionDetails.branchId, positionDetails.clientId, positionDetails.positionId).send({\n            from: address,\n            gas: 1000000\n          });\n        }\n      }\n    } catch (error) {\n      console.log(Error);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Breadcrumb, {\n      children: [/*#__PURE__*/_jsxDEV(Breadcrumb.Section, {\n        href: \"/\",\n        link: true,\n        children: \"Home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 965,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Breadcrumb.Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 968,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Breadcrumb.Section, {\n        active: true,\n        children: \"Branches\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 969,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 964,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Header, {\n        as: \"h2\",\n        icon: true,\n        textAlign: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(Icon, {\n          name: \"user circle outline\",\n          circular: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 974,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Header.Content, {\n          children: \" Branch\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 975,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 973,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 972,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\" \", /*#__PURE__*/_jsxDEV(Card.Group, {\n        centered: true,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          children: [/*#__PURE__*/_jsxDEV(Card.Content, {\n            children: [/*#__PURE__*/_jsxDEV(Card.Meta, {\n              children: [\"Branch ID: \", detailsbranchid]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 988,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Card.Description, {\n              children: [\"Balance: \", balancebranch / 10e7, \" \", tokenSymbol]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 989,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 987,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Card.Content, {\n            extra: true,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"ui two buttons\",\n              children: isconnectbuttonclicked ? /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false) : /*#__PURE__*/_jsxDEV(Button, {\n                secondary: true,\n                onClick: checkDetails,\n                children: \"Connect\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 998,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 994,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 993,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 986,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 985,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 983,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      unstackable: true,\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        widths: 4,\n        children: [/*#__PURE__*/_jsxDEV(Form.Input, {\n          label: \"Branch ID\",\n          placeholder: \"0.\",\n          type: \"number\",\n          value: branchid,\n          onChange: e => setBranchID(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1010,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n          label: \"Client Address\",\n          placeholder: \"0x00...\",\n          type: \"text\",\n          value: clientaddress,\n          onChange: e => setClientAddress(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1017,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n          label: \"Amount\",\n          placeholder: \"10...\",\n          type: \"number\",\n          value: amount,\n          onChange: e => setAmount(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1024,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1009,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        onClick: addClient,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1033,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1008,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1037,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Table, {\n        color: \"black\",\n        inverted: true,\n        children: [/*#__PURE__*/_jsxDEV(Table.Header, {\n          children: /*#__PURE__*/_jsxDEV(Table.Row, {\n            children: [/*#__PURE__*/_jsxDEV(Table.HeaderCell, {\n              children: \"Client Address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1042,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Table.HeaderCell, {\n              children: \"Amount\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1043,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Table.HeaderCell, {\n              children: \"BankId\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1044,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Table.HeaderCell, {\n              children: \"Client ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1045,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Table.HeaderCell, {\n              children: \"Approved\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 1046,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 1041,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1040,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Table.Body, {\n          children: arrayData.length > 0 && arrayData.map((data, index) => {\n            return /*#__PURE__*/_jsxDEV(Table.Row, {\n              children: [/*#__PURE__*/_jsxDEV(Table.Cell, {\n                children: data.client\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1056,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Table.Cell, {\n                children: [data.amount / 10e7, \" \", data.tokenSymbol]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1057,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Table.Cell, {\n                children: data.bankId\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1060,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Table.Cell, {\n                children: data.branchId\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1061,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Table.Cell, {\n                children: \"True\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1062,\n                columnNumber: 21\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1055,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1050,\n          columnNumber: 11\n        }, this)]\n      }, colors, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1039,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1074,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1038,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1077,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Header, {\n      as: \"h2\",\n      icon: true,\n      textAlign: \"center\",\n      children: [/*#__PURE__*/_jsxDEV(Icon, {\n        name: \"wait\",\n        circular: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1085,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Header.Content, {\n        children: \"Pending Forex Requests\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1086,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1084,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      secondary: true,\n      onClick: checkForexRequest,\n      children: \"View Requests\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1088,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1089,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Card.Group, {\n        centered: true,\n        children: arrayDataForexDet.length > 0 && arrayDataForexDet.map((data, index) => {\n          return /*#__PURE__*/_jsxDEV(Card, {\n            children: /*#__PURE__*/_jsxDEV(Card.Content, {\n              children: [/*#__PURE__*/_jsxDEV(Icon, {\n                name: \"money bill alternate outline\",\n                circular: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1097,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Card.Header, {\n                children: [\"Forex Request: \", data.reqId, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1098,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Card.Meta, {\n                children: [\"Amount \", data.amountInUsd / 10e7, \" USD\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1099,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Card.Meta, {\n                children: [\"Amount \", data.amountInEur / 10e7, \" EUR\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1100,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Card.Meta, {\n                children: [\"To Bank \", data.toBankId]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1101,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Card.Meta, {\n                children: [\"To Branch \", data.toBranchId]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1102,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Card.Description, {\n                children: [\"EUR/USD=\", data.amountInUsd / data.amountInEur]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1103,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1096,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1095,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1091,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1112,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Header, {\n          as: \"h2\",\n          icon: true,\n          textAlign: \"center\",\n          children: /*#__PURE__*/_jsxDEV(Header.Content, {\n            children: \"Forex Details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1115,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1114,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Table, {\n          color: \"black\",\n          inverted: true,\n          children: [/*#__PURE__*/_jsxDEV(Table.Header, {\n            children: /*#__PURE__*/_jsxDEV(Table.Row, {\n              children: [/*#__PURE__*/_jsxDEV(Table.HeaderCell, {\n                children: \"To Client Address\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1120,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Table.HeaderCell, {\n                children: \"Amount USD\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1121,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Table.HeaderCell, {\n                children: \"Amount EUR\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1122,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Table.HeaderCell, {\n                children: \"From Bank\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1123,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Table.HeaderCell, {\n                children: \"From Branch\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1124,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Table.HeaderCell, {\n                children: \"To Bank\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1125,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Table.HeaderCell, {\n                children: \"To Branch\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1126,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Table.HeaderCell, {\n                children: \"Status\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1127,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1119,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1118,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Table.Body, {\n            children: arrayDataForexDet.length > 0 && arrayDataForexDet.map((data, index) => {\n              // console.log(data[index]);\n              return /*#__PURE__*/_jsxDEV(Table.Row, {\n                children: [/*#__PURE__*/_jsxDEV(Table.Cell, {\n                  children: data.toClient\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1138,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Table.Cell, {\n                  children: [data.amountInUsd / 10e7, \"USD\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1139,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Table.Cell, {\n                  children: [data.amountInEur / 10e7, \" EUR\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1142,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Table.Cell, {\n                  children: data.fromBankId\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1145,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Table.Cell, {\n                  children: data.fromBranchId\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1146,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Table.Cell, {\n                  children: data.toBankId\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1147,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Table.Cell, {\n                  children: data.toBranchId\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1148,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Table.Cell, {\n                  children: data.isSentToBank ? /*#__PURE__*/_jsxDEV(Icon, {\n                    color: \"green\",\n                    name: \"checkmark\",\n                    size: \"large\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1150,\n                    columnNumber: 46\n                  }, this) : /*#__PURE__*/_jsxDEV(Icon, {\n                    color: \"red\",\n                    name: \"close\",\n                    size: \"large\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1150,\n                    columnNumber: 101\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1149,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Table.Cell, {\n                  children: [\" \", data.isSentToBank ? /*#__PURE__*/_jsxDEV(Button, {\n                    color: \"green\",\n                    children: \"Approved\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1154,\n                    columnNumber: 46\n                  }, this) : /*#__PURE__*/_jsxDEV(Button, {\n                    basic: true,\n                    color: \"green\",\n                    onClick: processForexRequestBranch,\n                    children: \"Approve\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1154,\n                    columnNumber: 89\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1152,\n                  columnNumber: 23\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1137,\n                columnNumber: 21\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1132,\n            columnNumber: 13\n          }, this)]\n        }, colors, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1117,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1168,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1113,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1090,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1171,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Header, {\n      as: \"h2\",\n      icon: true,\n      textAlign: \"center\",\n      children: [/*#__PURE__*/_jsxDEV(Icon, {\n        name: \"wait\",\n        circular: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1174,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Header.Content, {\n        children: \"Pending Borrow Requests\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1175,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1173,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      secondary: true,\n      onClick: checkBorrowRequest,\n      children: \"View Requests\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1178,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 1179,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Card.Group, {\n        centered: true,\n        children: arrayDataBorrowDispDet.length > 0 && arrayDataBorrowDispDet.map((data, index) => {\n          return /*#__PURE__*/_jsxDEV(Card, {\n            children: /*#__PURE__*/_jsxDEV(Card.Content, {\n              children: [/*#__PURE__*/_jsxDEV(Icon, {\n                name: \"handshake outline\",\n                circular: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1187,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Card.Header, {\n                children: [\"Borrow Request: \", data.positionId, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1188,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Card.Meta, {\n                children: [\"Amount \", data.amountBorrowed / 10e7, \" USD\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1189,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Card.Meta, {\n                children: [\"Status \", data.isDone ? /*#__PURE__*/_jsxDEV(Icon, {\n                  color: \"green\",\n                  name: \"checkmark\",\n                  size: \"large\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1190,\n                  columnNumber: 54\n                }, this) : /*#__PURE__*/_jsxDEV(Icon, {\n                  color: \"red\",\n                  name: \"close\",\n                  size: \"large\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1190,\n                  columnNumber: 109\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1190,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Card.Description, {\n                children: [\"Interest Rate \", 10, \" %\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1191,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1186,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1185,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1181,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1203,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Header, {\n          as: \"h2\",\n          icon: true,\n          textAlign: \"center\",\n          children: /*#__PURE__*/_jsxDEV(Header.Content, {\n            children: \"Borrower Details \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1205,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1204,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Table, {\n          color: \"black\",\n          inverted: true,\n          children: [/*#__PURE__*/_jsxDEV(Table.Header, {\n            children: /*#__PURE__*/_jsxDEV(Table.Row, {\n              children: [/*#__PURE__*/_jsxDEV(Table.HeaderCell, {\n                children: \"Client ID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1210,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Table.HeaderCell, {\n                children: \"Amount Borrowed\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1211,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Table.HeaderCell, {\n                children: \"Branch ID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1212,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Table.HeaderCell, {\n                children: \"Position ID\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1213,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Table.HeaderCell, {\n                children: \"Status\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1214,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Table.HeaderCell, {\n                children: \"Approved\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 1215,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 1209,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1208,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Table.Body, {\n            children: arrayDataBorrowDispDet.length > 0 && arrayDataBorrowDispDet.map((data, index) => {\n              // console.log(data[index]);\n              return /*#__PURE__*/_jsxDEV(Table.Row, {\n                children: [/*#__PURE__*/_jsxDEV(Table.Cell, {\n                  children: data.clientId\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1226,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Table.Cell, {\n                  children: data.amountBorrowed / 10e7\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1227,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Table.Cell, {\n                  children: data.branchId\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1228,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Table.Cell, {\n                  children: data.positionId\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1229,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Table.Cell, {\n                  children: data.isBorrowed ? 'True' : 'False'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1230,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Table.Cell, {\n                  children: data.isDone ? /*#__PURE__*/_jsxDEV(Icon, {\n                    color: \"green\",\n                    name: \"checkmark\",\n                    size: \"large\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1231,\n                    columnNumber: 50\n                  }, this) : /*#__PURE__*/_jsxDEV(Icon, {\n                    color: \"red\",\n                    name: \"close\",\n                    size: \"large\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1231,\n                    columnNumber: 105\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1231,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Table.Cell, {\n                  children: [\" \", data.isDone ? /*#__PURE__*/_jsxDEV(Button, {\n                    color: \"green\",\n                    children: \"Approved\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1234,\n                    columnNumber: 40\n                  }, this) : /*#__PURE__*/_jsxDEV(Button, {\n                    basic: true,\n                    color: \"green\",\n                    onClick: processLoan,\n                    children: \"Approve\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 1234,\n                    columnNumber: 83\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 1232,\n                  columnNumber: 23\n                }, this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 1225,\n                columnNumber: 21\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1220,\n            columnNumber: 13\n          }, this)]\n        }, colors, true, {\n          fileName: _jsxFileName,\n          lineNumber: 1207,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1247,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 1202,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 1180,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 963,\n    columnNumber: 5\n  }, this);\n}\n_s(Branch, \"Xk+KaKVef1HG7a3QhhUgliP5UuM=\");\n_c = Branch;\nexport default Branch;\nvar _c;\n$RefreshReg$(_c, \"Branch\");","map":{"version":3,"names":["React","Button","Form","useState","useEffect","Header","Icon","Image","Segment","Divider","Table","Breadcrumb","contractAddressFed","ABIFed","contractAddressEcb","ABIEcb","contractAddressbnksys","ABIbnksys","Card","colors","Web3","require","ethers","Branch","bankid","setBankID","branchid","setBranchID","amount","setAmount","tokenSymbol","setTokenSymbol","clientaddress","setClientAddress","centralbankid","setCentralBankID","arrayData","setArrayData","arrayDataForexDet","setArrayDataForexDet","arrayDataBorrowDet","setArrayBorrowDet","arrayDataBorrowDispDet","setArrayBorrowDispDet","newarrayData","setNewArrayData","balancebranch","setBalanceBranch","symbolbranch","setSymbolBranch","detailsbranchid","setDetailsBranchID","isconnectbuttonclicked","setIsConnectButtonClicked","isApprovedButton","setIsApprovedButton","temp_data","window","localStorage","getItem","JSON","parse","temp_data_frx_det","temp_data_brr_det","temp_data_disp_brr_det","addClient","ethereum","accounts","enable","console","log","provider","providers","Web3Provider","signer","getSigner","address","getAddress","web3eth","givenProvider","callContract","eth","Contract","callContractECB","callContractFED","selectedAddress","IDByAddress","methods","idOfAddress","call","bankId","responseEcb","approve","send","from","gas","response","clientid1","clientCount","clientDetails1","clients","tmp_data","push","setItem","stringify","client","responseFed","clientid2","clientDetails2","error","Error","checkForexRequest","balanceOf","forexDetails","ReqDetailsClient1","requestDetails","byClient","reqId","sendForexRequestToBank","fromBankId","fromBranchId","clientId","bank","checkDetails","branchId","sendForexRequestBank","processForexRequestBranch","IDByAddress2","toClient","branchDetails","branches","amountInEur","processForexRequestByBranch","toBankId","toBranchId","amountInUsd","checkBorrowRequest","borrowDetails","positionDetails1","positionDetails","positionId","isBorrowed","isDone","processLoan","amountBorrowed","approveBorrowRequest","e","target","value","length","map","data","index","isSentToBank"],"sources":["C:/Users/abdul.mohammed/Work/Learn/lvl_5/Banking_dapp/BankingSystem-Dapp/src/components/Branch.js"],"sourcesContent":["import React from \"react\";\r\nimport { Button, Form } from \"semantic-ui-react\";\r\nimport { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport {\r\n  Header,\r\n  Icon,\r\n  Image,\r\n  Segment,\r\n  Divider,\r\n  Table,\r\n  Breadcrumb,\r\n} from \"semantic-ui-react\";\r\nimport { contractAddressFed, ABIFed } from \"../constants\";\r\nimport { contractAddressEcb, ABIEcb } from \"../constants\";\r\nimport { contractAddressbnksys, ABIbnksys } from \"../constants\";\r\nimport { Card } from \"semantic-ui-react\";\r\n\r\nconst colors = [\"black\"];\r\n\r\nconst Web3 = require(\"web3\");\r\nconst ethers = require(\"ethers\");\r\n\r\nfunction Branch() {\r\n  const [bankid, setBankID] = useState(\"\");\r\n  const [branchid, setBranchID] = useState(\"\");\r\n  const [amount, setAmount] = useState(\"\");\r\n  const [tokenSymbol, setTokenSymbol] = useState(\"\");\r\n  const [clientaddress, setClientAddress] = useState(\"\");\r\n  const [centralbankid, setCentralBankID] = useState(\"\");\r\n  const [arrayData, setArrayData] = useState([]);\r\n  const [arrayDataForexDet, setArrayDataForexDet] = useState([]);\r\n  const [arrayDataBorrowDet, setArrayBorrowDet] = useState([]);\r\n  const [arrayDataBorrowDispDet, setArrayBorrowDispDet] = useState([]);\r\n  const [newarrayData, setNewArrayData] = useState([]);\r\n  const [balancebranch, setBalanceBranch] = useState(\"\");\r\n  const [symbolbranch, setSymbolBranch] = useState(\"\");\r\n  const [detailsbranchid, setDetailsBranchID] = useState(\"\");\r\n  const [isconnectbuttonclicked, setIsConnectButtonClicked] = useState(false);\r\n  const [isApprovedButton, setIsApprovedButton] = useState(false);\r\n\r\n  useEffect(() => {\r\n\r\n\r\n    let temp_data = window.localStorage.getItem(\"DataC\");\r\n    if (temp_data) {\r\n      temp_data = JSON.parse(temp_data);\r\n      setArrayData(temp_data);\r\n    }\r\n\r\n    let temp_data_frx_det = window.localStorage.getItem(\"DataFrxDet\");\r\n    if (temp_data_frx_det) {\r\n      temp_data_frx_det = JSON.parse(temp_data_frx_det);\r\n      setArrayDataForexDet(temp_data_frx_det);\r\n    }\r\n\r\n    let temp_data_brr_det = window.localStorage.getItem(\"DataBrrDet\");\r\n    if (temp_data_brr_det) {\r\n      temp_data_brr_det = JSON.parse(temp_data_brr_det);\r\n      setArrayBorrowDet(temp_data_brr_det);\r\n    }\r\n\r\n    let temp_data_disp_brr_det = window.localStorage.getItem(\"DataBrrDispDet\");\r\n    if (temp_data_disp_brr_det) {\r\n      temp_data_disp_brr_det = JSON.parse(temp_data_disp_brr_det);\r\n      setArrayBorrowDispDet(temp_data_disp_brr_det);\r\n    }\r\n\r\n    if (temp_data && temp_data_frx_det && temp_data_brr_det)\r\n      return;\r\n\r\n\r\n  }, [arrayData, arrayDataForexDet, setArrayBorrowDet]);\r\n\r\n  async function addClient() {\r\n    try {\r\n      if (\r\n        typeof window !== \"undefined\" &&\r\n        typeof window.ethereum !== \"undefined\"\r\n      ) {\r\n        const accounts = await window.ethereum.enable();\r\n        console.log(\"accounts\", accounts);\r\n        const provider = await new ethers.providers.Web3Provider(\r\n          window.ethereum\r\n        );\r\n        const signer = await provider.getSigner();\r\n        console.log(\"Signer\", signer);\r\n        const address = await signer.getAddress();\r\n        console.log(address);\r\n      } else {\r\n        console.log(\"MemtaMask Not Installed!!!\");\r\n      }\r\n      const web3eth = new Web3(Web3.givenProvider);\r\n\r\n      const callContract = new web3eth.eth.Contract(\r\n        ABIbnksys,\r\n        contractAddressbnksys\r\n      );\r\n      const callContractECB = new web3eth.eth.Contract(\r\n        ABIEcb,\r\n        contractAddressEcb\r\n      );\r\n      const callContractFED = new web3eth.eth.Contract(\r\n        ABIFed,\r\n        contractAddressFed\r\n      );\r\n      if (web3eth.givenProvider) {\r\n        console.log(\"Hello Provider Here\", web3eth.givenProvider);\r\n        let address = web3eth.givenProvider.selectedAddress;\r\n        console.log(\"address\", address);\r\n\r\n        let IDByAddress = await callContract.methods\r\n          .idOfAddress(address)\r\n          .call();\r\n\r\n        if (IDByAddress.bankId == 0) {\r\n          setTokenSymbol(\"EUR\");\r\n          let responseEcb = await callContractECB.methods\r\n            .approve(contractAddressbnksys, 100000000000)\r\n            .send({ from: address, gas: 1000000 });\r\n          console.log(\"Response :\", responseEcb);\r\n          let response = await callContract.methods\r\n            .addClient(\r\n              IDByAddress.bankId,\r\n              branchid,\r\n              clientaddress,\r\n              amount * 100000000,\r\n              \"EUR\"\r\n            )\r\n            .send({ from: address, gas: 1000000 });\r\n          console.log(response);\r\n          let clientid1 = await callContract.methods\r\n            .clientCount(IDByAddress.bankId, branchid)\r\n            .call();\r\n\r\n          let clientDetails1 = await callContract.methods\r\n            .clients(IDByAddress.bankId, clientid1 - 1)\r\n            .call();\r\n          console.log(\"clientid1:\", clientid1);\r\n          console.log(\"clientDetails1:\", clientDetails1);\r\n\r\n          let tmp_data = arrayData;\r\n          tmp_data.push(clientDetails1);\r\n          console.log(tmp_data);\r\n          setArrayData(tmp_data);\r\n          window.localStorage.setItem(\"DataC\", JSON.stringify(tmp_data));\r\n          console.log(\"arrayData:\", arrayData);\r\n          console.log(\"arrayData:\", arrayData[0].amount);\r\n          console.log(\"arrayData:\", arrayData[0].client);\r\n        } else {\r\n          setTokenSymbol(\"USD\");\r\n          let responseFed = await callContractFED.methods\r\n            .approve(contractAddressbnksys, amount * 100000000)\r\n            .send({ from: address, gas: 1000000 });\r\n\r\n          console.log(\"Response :\", responseFed);\r\n          let response = await callContract.methods\r\n            .addClient(\r\n              IDByAddress.bankId,\r\n              branchid,\r\n              clientaddress,\r\n              amount * 100000000,\r\n              \"USD\"\r\n            )\r\n            .send({ from: address, gas: 1000000 });\r\n          console.log(response);\r\n\r\n          let clientid2 = await callContract.methods\r\n            .clientCount(IDByAddress.bankId, branchid)\r\n            .call();\r\n\r\n          let clientDetails2 = await callContract.methods\r\n            .clients(IDByAddress.bankId, clientid2 - 1)\r\n            .call();\r\n          console.log(\"clientid1:\", clientid2);\r\n          console.log(\"clientDetails1:\", clientDetails2);\r\n\r\n          let tmp_data = arrayData;\r\n          tmp_data.push(clientDetails2);\r\n          console.log(tmp_data);\r\n          setArrayData(tmp_data);\r\n          window.localStorage.setItem(\"DataC\", JSON.stringify(tmp_data));\r\n          console.log(\"arrayData:\", arrayData);\r\n          console.log(\"arrayData:\", arrayData[0].amount);\r\n          console.log(\"arrayData:\", arrayData[0].client);\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.log(Error);\r\n    }\r\n  }\r\n\r\n  async function checkForexRequest() {\r\n    try {\r\n      if (\r\n        typeof window !== \"undefined\" &&\r\n        typeof window.ethereum !== \"undefined\"\r\n      ) {\r\n        const accounts = await window.ethereum.enable();\r\n        console.log(\"accounts\", accounts);\r\n        const provider = await new ethers.providers.Web3Provider(\r\n          window.ethereum\r\n        );\r\n        const signer = await provider.getSigner();\r\n        console.log(\"Signer\", signer);\r\n        const address = await signer.getAddress();\r\n        console.log(address);\r\n      } else {\r\n        console.log(\"MemtaMask Not Installed Maen\");\r\n      }\r\n      const web3eth = new Web3(Web3.givenProvider);\r\n\r\n      const callContract = new web3eth.eth.Contract(\r\n        ABIbnksys,\r\n        contractAddressbnksys\r\n      );\r\n      const callContractECB = new web3eth.eth.Contract(\r\n        ABIEcb,\r\n        contractAddressEcb\r\n      );\r\n      const callContractFED = new web3eth.eth.Contract(\r\n        ABIFed,\r\n        contractAddressFed\r\n      );\r\n      if (web3eth.givenProvider) {\r\n        console.log(\"Hello Provider Here\", web3eth.givenProvider);\r\n        let address = web3eth.givenProvider.selectedAddress;\r\n        console.log(\"address\", address);\r\n\r\n        let IDByAddress = await callContract.methods\r\n          .idOfAddress(address)\r\n          .call();\r\n\r\n        if (IDByAddress.bankId == 0) {\r\n          setTokenSymbol(\"EUR\");\r\n\r\n          let IDByAddress = await callContract.methods\r\n            .idOfAddress(address)\r\n            .call();\r\n\r\n          let balanceOf = await callContractECB.methods\r\n            .balanceOf(address)\r\n            .call();\r\n          setBalanceBranch(balanceOf);\r\n\r\n          let forexDetails = await callContract.methods\r\n            .forexDetails(address)\r\n            .call();\r\n          console.log(\"forexDetails\", forexDetails);\r\n\r\n          let ReqDetailsClient1 = await callContract.methods\r\n            .requestDetails(forexDetails.byClient, forexDetails.reqId)\r\n            .call();\r\n\r\n          let response = await callContract.methods\r\n            .sendForexRequestToBank(ReqDetailsClient1.fromBankId, ReqDetailsClient1.fromBranchId, forexDetails.clientId, ReqDetailsClient1.reqId) //Needs Debuging\r\n            .send({ from: address, gas: 1000000 });\r\n\r\n\r\n          let tmp_data = arrayDataForexDet;\r\n          tmp_data.push(ReqDetailsClient1);\r\n          console.log(tmp_data);\r\n          setArrayDataForexDet(tmp_data);\r\n          window.localStorage.setItem(\"DataFrxDet\", JSON.stringify(tmp_data));\r\n          console.log(\"rrayDataForexDet:\", arrayDataForexDet);\r\n          console.log(\"rrayDataForexDet:\", arrayDataForexDet[0].amount);\r\n          console.log(\"rrayDataForexDet:\", arrayDataForexDet[0].bank);\r\n        } else {\r\n          setTokenSymbol(\"USD\");\r\n\r\n          let balanceOf = await callContractFED.methods\r\n            .balanceOf(address)\r\n            .call();\r\n          setBalanceBranch(balanceOf);\r\n\r\n          let IDByAddress = await callContract.methods\r\n            .idOfAddress(address)\r\n            .call();\r\n\r\n          let forexDetails = await callContract.methods\r\n            .forexDetails(address)\r\n            .call();\r\n          console.log(\"forexDetails\", forexDetails);\r\n\r\n          let ReqDetailsClient1 = await callContract.methods\r\n            .requestDetails(forexDetails.byClient, forexDetails.reqId)\r\n            .call();\r\n\r\n          let response = await callContract.methods\r\n            .sendForexRequestToBank(\r\n              ReqDetailsClient1.fromBankId, ReqDetailsClient1.fromBranchId, forexDetails.clientId, ReqDetailsClient1.reqId\r\n            )\r\n            .send({ from: address, gas: 1000000 });\r\n\r\n          console.log(\"ReqDetailsAddress :\", forexDetails);\r\n          console.log(\"ReqDetailsClient1 :\", ReqDetailsClient1);\r\n\r\n          // response = {addres: hhkujiiio, status: true, id:555, amount:8885454}\r\n          let tmp_data = arrayDataForexDet;\r\n          tmp_data.push(ReqDetailsClient1);\r\n          console.log(\"tmp_data\", tmp_data);\r\n          setArrayDataForexDet(tmp_data);\r\n          window.localStorage.setItem(\"DataFrxDet\", JSON.stringify(tmp_data));\r\n          console.log(\"arrayDataForexDet:\", arrayDataForexDet[0].amount);\r\n          console.log(\"arrayDataForexDet:\", arrayDataForexDet[0].bank);\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.log(Error);\r\n    }\r\n  }\r\n  async function checkDetails() {\r\n    try {\r\n      if (\r\n        typeof window !== \"undefined\" &&\r\n        typeof window.ethereum !== \"undefined\"\r\n      ) {\r\n        const accounts = await window.ethereum.enable();\r\n        console.log(\"accounts\", accounts);\r\n        const provider = await new ethers.providers.Web3Provider(\r\n          window.ethereum\r\n        );\r\n        const signer = await provider.getSigner();\r\n        console.log(\"Signer\", signer);\r\n        const address = await signer.getAddress();\r\n        console.log(address);\r\n      } else {\r\n        console.log(\"MemtaMask Not Installed Maen\");\r\n      }\r\n      const web3eth = new Web3(Web3.givenProvider);\r\n\r\n      const callContract = new web3eth.eth.Contract(\r\n        ABIbnksys,\r\n        contractAddressbnksys\r\n      );\r\n      const callContractECB = new web3eth.eth.Contract(\r\n        ABIEcb,\r\n        contractAddressEcb\r\n      );\r\n      const callContractFED = new web3eth.eth.Contract(\r\n        ABIFed,\r\n        contractAddressFed\r\n      );\r\n      if (web3eth.givenProvider) {\r\n        console.log(\"Hello Provider Here\", web3eth.givenProvider);\r\n        let address = web3eth.givenProvider.selectedAddress;\r\n        console.log(\"address\", address);\r\n\r\n        let IDByAddress = await callContract.methods\r\n          .idOfAddress(address)\r\n          .call();\r\n\r\n        if (IDByAddress.bankId == 0) {\r\n          setTokenSymbol(\"EUR\");\r\n          let IDByAddress = await callContract.methods\r\n            .idOfAddress(address)\r\n            .call();\r\n          setDetailsBranchID(IDByAddress.branchId);\r\n\r\n          let balanceOf = await callContractECB.methods\r\n            .balanceOf(address)\r\n            .call();\r\n          setBalanceBranch(balanceOf);\r\n        } else {\r\n          setTokenSymbol(\"USD\");\r\n\r\n          let IDByAddress = await callContract.methods\r\n            .idOfAddress(address)\r\n            .call();\r\n          setDetailsBranchID(IDByAddress.branchId);\r\n\r\n          let balanceOf = await callContractFED.methods\r\n            .balanceOf(address)\r\n            .call();\r\n          setBalanceBranch(balanceOf);\r\n        }\r\n      }\r\n      setIsConnectButtonClicked(true);\r\n    } catch (error) {\r\n      console.log(Error);\r\n    }\r\n  }\r\n\r\n  async function sendForexRequestBank() {\r\n    try {\r\n      if (\r\n        typeof window !== \"undefined\" &&\r\n        typeof window.ethereum !== \"undefined\"\r\n      ) {\r\n        const accounts = await window.ethereum.enable();\r\n        console.log(\"accounts\", accounts);\r\n        const provider = await new ethers.providers.Web3Provider(\r\n          window.ethereum\r\n        );\r\n        const signer = await provider.getSigner();\r\n        console.log(\"Signer\", signer);\r\n        const address = await signer.getAddress();\r\n        console.log(address);\r\n      } else {\r\n        console.log(\"MemtaMask Not Installed Maen\");\r\n      }\r\n      const web3eth = new Web3(Web3.givenProvider);\r\n\r\n      const callContract = new web3eth.eth.Contract(\r\n        ABIbnksys,\r\n        contractAddressbnksys\r\n      );\r\n      const callContractECB = new web3eth.eth.Contract(\r\n        ABIEcb,\r\n        contractAddressEcb\r\n      );\r\n      const callContractFED = new web3eth.eth.Contract(\r\n        ABIFed,\r\n        contractAddressFed\r\n      );\r\n      if (web3eth.givenProvider) {\r\n        console.log(\"Hello Provider Here\", web3eth.givenProvider);\r\n        let address = web3eth.givenProvider.selectedAddress;\r\n        console.log(\"address\", address);\r\n\r\n        let IDByAddress = await callContract.methods\r\n          .idOfAddress(address)\r\n          .call();\r\n\r\n        if (IDByAddress.bankId == 0) {\r\n          setTokenSymbol(\"EUR\");\r\n\r\n          let forexDetails = await callContract.methods\r\n            .forexDetails(address)\r\n            .call();\r\n\r\n          let response = await callContract.methods\r\n            .sendForexRequestToBank(\r\n              IDByAddress.bankId,\r\n              IDByAddress.branchId,\r\n              forexDetails.clientId,\r\n              forexDetails.reqId\r\n            )\r\n            .send({ from: address, gas: 1000000 });\r\n        } else {\r\n          setTokenSymbol(\"USD\");\r\n\r\n          let IDByAddress = await callContract.methods\r\n            .idOfAddress(address)\r\n            .call();\r\n\r\n          let forexDetails = await callContract.methods\r\n            .forexDetails(address)\r\n            .call();\r\n\r\n          let response = await callContract.methods\r\n            .sendForexRequestToBank(\r\n              IDByAddress.bankId,\r\n              IDByAddress.branchId,\r\n              forexDetails.clientId,\r\n              forexDetails.reqId\r\n            )\r\n            .send({ from: address, gas: 1000000 });\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.log(Error);\r\n    }\r\n  }\r\n  async function processForexRequestBranch() {\r\n    try {\r\n      if (\r\n        typeof window !== \"undefined\" &&\r\n        typeof window.ethereum !== \"undefined\"\r\n      ) {\r\n        const accounts = await window.ethereum.enable();\r\n        console.log(\"accounts\", accounts);\r\n        const provider = await new ethers.providers.Web3Provider(\r\n          window.ethereum\r\n        );\r\n        const signer = await provider.getSigner();\r\n        console.log(\"Signer\", signer);\r\n        const address = await signer.getAddress();\r\n        console.log(address);\r\n      } else {\r\n        console.log(\"MemtaMask Not Installed Maen\");\r\n      }\r\n      const web3eth = new Web3(Web3.givenProvider);\r\n\r\n      const callContract = new web3eth.eth.Contract(\r\n        ABIbnksys,\r\n        contractAddressbnksys\r\n      );\r\n      const callContractECB = new web3eth.eth.Contract(\r\n        ABIEcb,\r\n        contractAddressEcb\r\n      );\r\n      const callContractFED = new web3eth.eth.Contract(\r\n        ABIFed,\r\n        contractAddressFed\r\n      );\r\n      if (web3eth.givenProvider) {\r\n        console.log(\"Hello Provider Here\", web3eth.givenProvider);\r\n        let address = web3eth.givenProvider.selectedAddress;\r\n        console.log(\"address\", address);\r\n\r\n        let IDByAddress = await callContract.methods\r\n          .idOfAddress(address)\r\n          .call();\r\n\r\n        let forexDetails = await callContract.methods\r\n          .forexDetails(address)\r\n          .call();\r\n\r\n        let IDByAddress2 = await callContract.methods\r\n          .idOfAddress(forexDetails.toClient)\r\n          .call();\r\n\r\n        let branchDetails = await callContract.methods\r\n          .branches(IDByAddress2.bankId, IDByAddress2.branchId)\r\n          .call();\r\n\r\n        let requestDetails = await callContract.methods\r\n          .requestDetails(forexDetails.byClient, forexDetails.reqId)\r\n          .call();\r\n\r\n        if (IDByAddress.bankId == 0) {\r\n          setTokenSymbol(\"EUR\");\r\n\r\n          let IDByAddress = await callContract.methods\r\n            .idOfAddress(address)\r\n            .call();\r\n\r\n          let forexDetails = await callContract.methods\r\n            .forexDetails(address)\r\n            .call();\r\n\r\n          let IDByAddress2 = await callContract.methods\r\n            .idOfAddress(forexDetails.toClient)\r\n            .call();\r\n\r\n          let branchDetails = await callContract.methods\r\n            .branches(IDByAddress2.bankId, IDByAddress2.branchId)\r\n            .call();\r\n\r\n          let requestDetails = await callContract.methods\r\n            .requestDetails(forexDetails.byClient, forexDetails.reqId)\r\n            .call();\r\n\r\n          let responseEcb = await callContractECB.methods\r\n            .approve(contractAddressbnksys, requestDetails.amountInEur)\r\n            .send({ from: address, gas: 1000000 });\r\n\r\n          let response = await callContract.methods\r\n            .processForexRequestByBranch(\r\n              requestDetails.toBankId,\r\n              requestDetails.toBranchId,\r\n              requestDetails.fromBankId,\r\n              requestDetails.fromBranchId,\r\n              requestDetails.reqId\r\n            )\r\n            .send({ from: address, gas: 1000000 });\r\n\r\n          let tmp_data = arrayDataForexDet;\r\n          tmp_data.push(requestDetails);\r\n          console.log(tmp_data);\r\n          setArrayDataForexDet(tmp_data);\r\n          window.localStorage.setItem(\"DataFrxDet\", JSON.stringify(tmp_data));\r\n          console.log(\"rrayDataForexDet:\", arrayDataForexDet);\r\n          console.log(\"rrayDataForexDet:\", arrayDataForexDet[0].amount);\r\n          console.log(\"rrayDataForexDet:\", arrayDataForexDet[0].bank);\r\n\r\n        } else {\r\n          setTokenSymbol(\"USD\");\r\n\r\n          let IDByAddress = await callContract.methods\r\n            .idOfAddress(address)\r\n            .call();\r\n\r\n          let forexDetails = await callContract.methods\r\n            .forexDetails(address)\r\n            .call();\r\n\r\n          let IDByAddress2 = await callContract.methods\r\n            .idOfAddress(forexDetails.toClient)\r\n            .call();\r\n\r\n          let branchDetails = await callContract.methods\r\n            .branches(IDByAddress2.bankId, IDByAddress2.branchId)\r\n            .call();\r\n\r\n          let requestDetails = await callContract.methods\r\n            .requestDetails(forexDetails.byClient, forexDetails.reqId)\r\n            .call();\r\n\r\n          let responseFed = await callContractFED.methods\r\n            .approve(contractAddressbnksys, requestDetails.amountInUsd)\r\n            .send({ from: address, gas: 1000000 });\r\n\r\n          let response = await callContract.methods\r\n            .processForexRequestByBranch(\r\n              requestDetails.toBankId,\r\n              requestDetails.toBranchId,\r\n              requestDetails.fromBankId,\r\n              requestDetails.fromBranchId,\r\n              requestDetails.reqId\r\n            )\r\n            .send({ from: address, gas: 1000000 });\r\n\r\n          let tmp_data = arrayDataForexDet;\r\n          tmp_data.push(requestDetails);\r\n          console.log(\"tmp_data\", tmp_data);\r\n          setArrayDataForexDet(tmp_data);\r\n          window.localStorage.setItem(\"DataFrxDet\", JSON.stringify(tmp_data));\r\n          console.log(\"arrayDataForexDet:\", arrayDataForexDet[0].amount);\r\n          console.log(\"arrayDataForexDet:\", arrayDataForexDet[0].bank);\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.log(Error);\r\n    }\r\n  }\r\n\r\n  async function checkBorrowRequest() {\r\n    try {\r\n      if (\r\n        typeof window !== \"undefined\" &&\r\n        typeof window.ethereum !== \"undefined\"\r\n      ) {\r\n        const accounts = await window.ethereum.enable();\r\n        console.log(\"accounts\", accounts);\r\n        const provider = await new ethers.providers.Web3Provider(\r\n          window.ethereum\r\n        );\r\n        const signer = await provider.getSigner();\r\n        console.log(\"Signer\", signer);\r\n        const address = await signer.getAddress();\r\n        console.log(address);\r\n      } else {\r\n        console.log(\"MemtaMask Not Installed Maen\");\r\n      }\r\n      const web3eth = new Web3(Web3.givenProvider);\r\n\r\n      const callContract = new web3eth.eth.Contract(\r\n        ABIbnksys,\r\n        contractAddressbnksys\r\n      );\r\n      const callContractECB = new web3eth.eth.Contract(\r\n        ABIEcb,\r\n        contractAddressEcb\r\n      );\r\n      const callContractFED = new web3eth.eth.Contract(\r\n        ABIFed,\r\n        contractAddressFed\r\n      );\r\n      if (web3eth.givenProvider) {\r\n        console.log(\"Hello Provider Here\", web3eth.givenProvider);\r\n        let address = web3eth.givenProvider.selectedAddress;\r\n        console.log(\"address\", address);\r\n\r\n        let IDByAddress = await callContract.methods\r\n          .idOfAddress(address)\r\n          .call();\r\n\r\n        if (IDByAddress.bankId == 0) {\r\n          setTokenSymbol(\"EUR\");\r\n\r\n          let IDByAddress = await callContract.methods\r\n            .idOfAddress(address)\r\n            .call();\r\n\r\n          let borrowDetails = await callContract.methods\r\n            .borrowDetails(address)\r\n            .call();\r\n          console.log(\"borrowDetails\", borrowDetails);\r\n\r\n          let positionDetails1 = await callContract.methods\r\n            .positionDetails(borrowDetails.byClient, borrowDetails.positionId)\r\n            .call();\r\n\r\n          console.log(\"positionDetails1\", positionDetails1);\r\n\r\n          let tmp_data = arrayDataBorrowDispDet;\r\n          tmp_data.push(positionDetails1);\r\n          console.log(tmp_data);\r\n          setArrayBorrowDispDet(tmp_data);\r\n          window.localStorage.setItem(\"DataBrrDispDet\", JSON.stringify(tmp_data));\r\n          console.log(\"arrayData:\", arrayData);\r\n          console.log(\"arrayData:\", arrayData[0].isBorrowed);\r\n          console.log(\"arrayData:\", arrayData[0].isDone);\r\n        } else {\r\n          setTokenSymbol(\"USD\");\r\n\r\n          let IDByAddress = await callContract.methods\r\n            .idOfAddress(address)\r\n            .call();\r\n\r\n          let borrowDetails = await callContract.methods\r\n            .borrowDetails(address)\r\n            .call();\r\n          console.log(\"borrowDetails\", borrowDetails);\r\n\r\n          let positionDetails1 = await callContract.methods\r\n            .positionDetails(borrowDetails.byClient, borrowDetails.positionId)\r\n            .call();\r\n\r\n          console.log(\"positionDetails1\", positionDetails1);\r\n\r\n          let tmp_data = arrayDataBorrowDispDet;\r\n          tmp_data.push(positionDetails1);\r\n          console.log(tmp_data);\r\n          setArrayBorrowDispDet(tmp_data);\r\n          window.localStorage.setItem(\"DataBrrDispDet\", JSON.stringify(tmp_data));\r\n          console.log(\"arrayData:\", arrayData);\r\n          console.log(\"arrayData:\", arrayData[0].isBorrowed);\r\n          console.log(\"arrayData:\", arrayData[0].isDone);\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.log(Error);\r\n    }\r\n  }\r\n\r\n  async function processLoan() {\r\n    try {\r\n      if (\r\n        typeof window !== \"undefined\" &&\r\n        typeof window.ethereum !== \"undefined\"\r\n      ) {\r\n        const accounts = await window.ethereum.enable();\r\n        console.log(\"accounts\", accounts);\r\n        const provider = await new ethers.providers.Web3Provider(\r\n          window.ethereum\r\n        );\r\n        const signer = await provider.getSigner();\r\n        console.log(\"Signer\", signer);\r\n        const address = await signer.getAddress();\r\n        console.log(address);\r\n      } else {\r\n        console.log(\"MemtaMask Not Installed Maen\");\r\n      }\r\n      const web3eth = new Web3(Web3.givenProvider);\r\n\r\n      const callContract = new web3eth.eth.Contract(\r\n        ABIbnksys,\r\n        contractAddressbnksys\r\n      );\r\n      const callContractECB = new web3eth.eth.Contract(\r\n        ABIEcb,\r\n        contractAddressEcb\r\n      );\r\n      const callContractFED = new web3eth.eth.Contract(\r\n        ABIFed,\r\n        contractAddressFed\r\n      );\r\n      if (web3eth.givenProvider) {\r\n        console.log(\"Hello Provider Here\", web3eth.givenProvider);\r\n        let address = web3eth.givenProvider.selectedAddress;\r\n        console.log(\"address\", address);\r\n\r\n        let IDByAddress = await callContract.methods\r\n          .idOfAddress(address)\r\n          .call();\r\n\r\n        if (IDByAddress.bankId == 0) {\r\n          setTokenSymbol(\"EUR\");\r\n\r\n          let IDByAddress = await callContract.methods\r\n            .idOfAddress(address)\r\n            .call();\r\n\r\n          let borrowDetails = await callContract.methods\r\n            .borrowDetails(address)\r\n            .call();\r\n          console.log(\"borrowDetails\", borrowDetails);\r\n\r\n\r\n\r\n          let positionDetails = await callContract.methods\r\n            .positionDetails(borrowDetails.byClient, borrowDetails.positionId)\r\n            .call();\r\n\r\n          console.log(\"borrowDetails :\", borrowDetails);\r\n          console.log(\"positionDetails :\", positionDetails);\r\n\r\n          let responseEcb = await callContractECB.methods\r\n            .approve(contractAddressbnksys, positionDetails.amountBorrowed)\r\n            .send({ from: address, gas: 1000000 });\r\n\r\n          let response = await callContract.methods\r\n            .processLoan(\r\n              positionDetails.bankId,\r\n              positionDetails.branchId,\r\n              positionDetails.clientId,\r\n              positionDetails.positionId\r\n            )\r\n            .send({ from: address, gas: 1000000 });\r\n\r\n          let positionDetails1 = await callContract.methods\r\n            .positionDetails(borrowDetails.byClient, borrowDetails.positionId)\r\n            .call();\r\n\r\n          console.log(\"positionDetails1\", positionDetails1);\r\n\r\n          let tmp_data = arrayDataBorrowDispDet;\r\n          tmp_data.push(positionDetails1);\r\n          console.log(tmp_data);\r\n          setArrayBorrowDispDet(tmp_data);\r\n          window.localStorage.setItem(\"DataBrrDispDet\", JSON.stringify(tmp_data));\r\n          console.log(\"arrayData:\", arrayData);\r\n          console.log(\"arrayData:\", arrayData[0].isBorrowed);\r\n          console.log(\"arrayData:\", arrayData[0].isDone);\r\n        } else {\r\n          setTokenSymbol(\"USD\");\r\n\r\n          let IDByAddress = await callContract.methods\r\n            .idOfAddress(address)\r\n            .call();\r\n\r\n          let borrowDetails = await callContract.methods\r\n            .borrowDetails(address)\r\n            .call();\r\n          console.log(\"borrowDetails\", borrowDetails);\r\n\r\n          let positionDetails = await callContract.methods\r\n            .positionDetails(borrowDetails.byClient, borrowDetails.positionId)\r\n            .call();\r\n\r\n          console.log(\"borrowDetails :\", borrowDetails);\r\n          console.log(\"positionDetails :\", positionDetails);\r\n\r\n          let responseFed = await callContractFED.methods\r\n            .approve(contractAddressbnksys, positionDetails.amountBorrowed)\r\n            .send({ from: address, gas: 1000000 });\r\n\r\n\r\n\r\n          let response = await callContract.methods\r\n            .processLoan(\r\n              positionDetails.bankId,\r\n              positionDetails.branchId,\r\n              positionDetails.clientId,\r\n              positionDetails.positionId\r\n            )\r\n            .send({ from: address, gas: 1000000 });\r\n\r\n          let positionDetails1 = await callContract.methods\r\n            .positionDetails(borrowDetails.byClient, borrowDetails.positionId)\r\n            .call();\r\n\r\n          console.log(\"positionDetails1\", positionDetails1);\r\n\r\n          let tmp_data = arrayDataBorrowDispDet;\r\n          tmp_data.push(positionDetails1);\r\n          console.log(tmp_data);\r\n          setArrayBorrowDispDet(tmp_data);\r\n          window.localStorage.setItem(\"DataBrrDispDet\", JSON.stringify(tmp_data));\r\n          console.log(\"arrayData:\", arrayData);\r\n          console.log(\"arrayData:\", arrayData[0].isBorrowed);\r\n          console.log(\"arrayData:\", arrayData[0].isDone);\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.log(Error);\r\n    }\r\n    setIsApprovedButton(true)\r\n  }\r\n\r\n  async function approveBorrowRequest() {\r\n    try {\r\n      if (\r\n        typeof window !== \"undefined\" &&\r\n        typeof window.ethereum !== \"undefined\"\r\n      ) {\r\n        const accounts = await window.ethereum.enable();\r\n        console.log(\"accounts\", accounts);\r\n        const provider = await new ethers.providers.Web3Provider(\r\n          window.ethereum\r\n        );\r\n        const signer = await provider.getSigner();\r\n        console.log(\"Signer\", signer);\r\n        const address = await signer.getAddress();\r\n        console.log(address);\r\n      } else {\r\n        console.log(\"MemtaMask Not Installed Maen\");\r\n      }\r\n      const web3eth = new Web3(Web3.givenProvider);\r\n\r\n      const callContract = new web3eth.eth.Contract(\r\n        ABIbnksys,\r\n        contractAddressbnksys\r\n      );\r\n      const callContractECB = new web3eth.eth.Contract(\r\n        ABIEcb,\r\n        contractAddressEcb\r\n      );\r\n      const callContractFED = new web3eth.eth.Contract(\r\n        ABIFed,\r\n        contractAddressFed\r\n      );\r\n      if (web3eth.givenProvider) {\r\n        console.log(\"Hello Provider Here\", web3eth.givenProvider);\r\n        let address = web3eth.givenProvider.selectedAddress;\r\n        console.log(\"address\", address);\r\n\r\n        let IDByAddress = await callContract.methods\r\n          .idOfAddress(address)\r\n          .call();\r\n\r\n        if (IDByAddress.bankId == 0) {\r\n          setTokenSymbol(\"EUR\");\r\n\r\n          let borrowDetails = await callContract.methods\r\n            .borrowDetails(address)\r\n            .call();\r\n          console.log(\"borrowDetails\", borrowDetails);\r\n\r\n          let positionDetails = await callContract.methods\r\n            .positionDetails(borrowDetails.byClient, positionDetails.positionId)\r\n            .call();\r\n\r\n          let responseEcb = await callContractECB.methods\r\n            .approve(contractAddressbnksys, positionDetails.amountBorrowed)\r\n            .send({ from: address, gas: 1000000 });\r\n          console.log(\"Response :\", responseEcb);\r\n\r\n          let response = await callContract.methods\r\n            .processLoan(\r\n              positionDetails.bankId,\r\n              positionDetails.branchId,\r\n              positionDetails.clientId,\r\n              positionDetails.positionId\r\n            )\r\n            .send({ from: address, gas: 1000000 });\r\n        } else {\r\n          setTokenSymbol(\"USD\");\r\n\r\n          let borrowDetails = await callContract.methods\r\n            .borrowDetails(address)\r\n            .call();\r\n          console.log(\"borrowDetails\", borrowDetails);\r\n\r\n          let positionDetails = await callContract.methods\r\n            .positionDetails(borrowDetails.byClient, positionDetails.positionId)\r\n            .call();\r\n\r\n          let responseFed = await callContractFED.methods\r\n            .approve(contractAddressbnksys, positionDetails.amountBorrowed)\r\n            .send({ from: address, gas: 1000000 });\r\n          console.log(\"Response :\", responseFed);\r\n\r\n          let response = await callContract.methods\r\n            .processLoan(\r\n              positionDetails.bankId,\r\n              positionDetails.branchId,\r\n              positionDetails.clientId,\r\n              positionDetails.positionId\r\n            )\r\n            .send({ from: address, gas: 1000000 });\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.log(Error);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Breadcrumb>\r\n        <Breadcrumb.Section href=\"/\" link>\r\n          Home\r\n        </Breadcrumb.Section>\r\n        <Breadcrumb.Divider />\r\n        <Breadcrumb.Section active>Branches</Breadcrumb.Section>\r\n      </Breadcrumb>\r\n\r\n      <div>\r\n        <Header as=\"h2\" icon textAlign=\"center\">\r\n          <Icon name=\"user circle outline\" circular />\r\n          <Header.Content> Branch</Header.Content>\r\n        </Header>\r\n        {/* <Image\r\n                    centered\r\n                    size=\"medium\"\r\n                    src=\"https://react.semantic-ui.com/images/wireframe/image.png\"\r\n                /> */}\r\n      </div>\r\n      <div>\r\n        {\" \"}\r\n        <Card.Group centered>\r\n          <Card>\r\n            <Card.Content>\r\n              <Card.Meta>Branch ID: {detailsbranchid}</Card.Meta>\r\n              <Card.Description>\r\n                Balance: {balancebranch / 10e7} {tokenSymbol}\r\n              </Card.Description>\r\n            </Card.Content>\r\n            <Card.Content extra>\r\n              <div className=\"ui two buttons\">\r\n                {isconnectbuttonclicked ? (\r\n                  <></>\r\n                ) : (\r\n                  <Button secondary onClick={checkDetails}>\r\n                    Connect\r\n                  </Button>\r\n                )}\r\n              </div>\r\n            </Card.Content>\r\n          </Card>\r\n        </Card.Group>\r\n      </div>\r\n\r\n      <Form unstackable>\r\n        <Form.Group widths={4}>\r\n          <Form.Input\r\n            label=\"Branch ID\"\r\n            placeholder=\"0.\"\r\n            type=\"number\"\r\n            value={branchid}\r\n            onChange={(e) => setBranchID(e.target.value)}\r\n          />\r\n          <Form.Input\r\n            label=\"Client Address\"\r\n            placeholder=\"0x00...\"\r\n            type=\"text\"\r\n            value={clientaddress}\r\n            onChange={(e) => setClientAddress(e.target.value)}\r\n          />\r\n          <Form.Input\r\n            label=\"Amount\"\r\n            placeholder=\"10...\"\r\n            type=\"number\"\r\n            value={amount}\r\n            onChange={(e) => setAmount(e.target.value)}\r\n          />\r\n        </Form.Group>\r\n\r\n        <Button type=\"submit\" onClick={addClient}>\r\n          Submit\r\n        </Button>\r\n      </Form>\r\n      <Divider />\r\n      <div>\r\n        <Table color=\"black\" key={colors} inverted>\r\n          <Table.Header>\r\n            <Table.Row>\r\n              <Table.HeaderCell>Client Address</Table.HeaderCell>\r\n              <Table.HeaderCell>Amount</Table.HeaderCell>\r\n              <Table.HeaderCell>BankId</Table.HeaderCell>\r\n              <Table.HeaderCell>Client ID</Table.HeaderCell>\r\n              <Table.HeaderCell>Approved</Table.HeaderCell>\r\n            </Table.Row>\r\n          </Table.Header>\r\n\r\n          <Table.Body>\r\n            {arrayData.length > 0 &&\r\n              arrayData.map((data, index) => {\r\n\r\n                return (\r\n                  <Table.Row key={index}>\r\n                    <Table.Cell>{data.client}</Table.Cell>\r\n                    <Table.Cell>\r\n                      {data.amount / 10e7} {data.tokenSymbol}\r\n                    </Table.Cell>\r\n                    <Table.Cell>{data.bankId}</Table.Cell>\r\n                    <Table.Cell>{data.branchId}</Table.Cell>\r\n                    <Table.Cell>True</Table.Cell>\r\n                  </Table.Row>\r\n                );\r\n              })}\r\n\r\n            {/* <Table.Row>\r\n      <Table.Cell>\"0x157840be5604f37284b00Ec5801B609710764566\"</Table.Cell>\r\n      <Table.Cell>{1000}</Table.Cell>\r\n      <Table.Cell>true</Table.Cell>\r\n    </Table.Row> */}\r\n          </Table.Body>\r\n        </Table>\r\n        <Divider />\r\n      </div>\r\n\r\n      <div>\r\n        {/* <Segment inverted>\r\n  <Image src='https://react.semantic-ui.com/images/wireframe/short-paragraph.png' />\r\n  <Divider inverted />\r\n\r\n</Segment> */}\r\n      </div>\r\n      <Header as=\"h2\" icon textAlign=\"center\">\r\n        <Icon name=\"wait\" circular />\r\n        <Header.Content>Pending Forex Requests</Header.Content>\r\n      </Header>\r\n      <Button secondary onClick={checkForexRequest}>View Requests</Button>\r\n      <Divider />\r\n      <div>\r\n        <Card.Group centered>\r\n          {arrayDataForexDet.length > 0 &&\r\n            arrayDataForexDet.map((data, index) => {\r\n              return (\r\n                <Card>\r\n                  <Card.Content>\r\n                    <Icon name=\"money bill alternate outline\" circular />\r\n                    <Card.Header>Forex Request: {data.reqId} </Card.Header>\r\n                    <Card.Meta>Amount {data.amountInUsd / 10e7} USD</Card.Meta>\r\n                    <Card.Meta>Amount {data.amountInEur / 10e7} EUR</Card.Meta>\r\n                    <Card.Meta>To Bank {data.toBankId}</Card.Meta>\r\n                    <Card.Meta>To Branch {data.toBranchId}</Card.Meta>\r\n                    <Card.Description>EUR/USD={data.amountInUsd/data.amountInEur}</Card.Description>\r\n                  </Card.Content>\r\n\r\n\r\n                </Card>\r\n              );\r\n            })}\r\n        </Card.Group>\r\n\r\n        <Divider />\r\n        <div>\r\n          <Header as=\"h2\" icon textAlign=\"center\">\r\n            <Header.Content>Forex Details</Header.Content>\r\n          </Header>\r\n          <Table color=\"black\" key={colors} inverted>\r\n            <Table.Header>\r\n              <Table.Row>\r\n                <Table.HeaderCell>To Client Address</Table.HeaderCell>\r\n                <Table.HeaderCell>Amount USD</Table.HeaderCell>\r\n                <Table.HeaderCell>Amount EUR</Table.HeaderCell>\r\n                <Table.HeaderCell>From Bank</Table.HeaderCell>\r\n                <Table.HeaderCell>From Branch</Table.HeaderCell>\r\n                <Table.HeaderCell>To Bank</Table.HeaderCell>\r\n                <Table.HeaderCell>To Branch</Table.HeaderCell>\r\n                <Table.HeaderCell>Status</Table.HeaderCell>\r\n\r\n              </Table.Row>\r\n            </Table.Header>\r\n\r\n            <Table.Body>\r\n              {arrayDataForexDet.length > 0 &&\r\n                arrayDataForexDet.map((data, index) => {\r\n                  // console.log(data[index]);\r\n                  return (\r\n                    <Table.Row key={index}>\r\n                      <Table.Cell>{data.toClient}</Table.Cell>\r\n                      <Table.Cell>\r\n                        {data.amountInUsd / 10e7}USD\r\n                      </Table.Cell>\r\n                      <Table.Cell>\r\n                        {data.amountInEur / 10e7} EUR\r\n                      </Table.Cell>\r\n                      <Table.Cell>{data.fromBankId}</Table.Cell>\r\n                      <Table.Cell>{data.fromBranchId}</Table.Cell>\r\n                      <Table.Cell>{data.toBankId}</Table.Cell>\r\n                      <Table.Cell>{data.toBranchId}</Table.Cell>\r\n                      <Table.Cell>\r\n                        {data.isSentToBank ? <Icon color='green' name='checkmark' size='large' /> : <Icon color='red' name='close' size='large' />}\r\n                      </Table.Cell>\r\n                      <Table.Cell>\r\n                        {\" \"}\r\n                        {data.isSentToBank ? <Button color=\"green\">Approved</Button> :  <Button basic color=\"green\" onClick={processForexRequestBranch}>Approve</Button>}\r\n\r\n                      </Table.Cell>\r\n                    </Table.Row>\r\n                  );\r\n                })}\r\n\r\n              {/* <Table.Row>\r\n      <Table.Cell>\"0x157840be5604f37284b00Ec5801B609710764566\"</Table.Cell>\r\n      <Table.Cell>{1000}</Table.Cell>\r\n      <Table.Cell>true</Table.Cell>\r\n    </Table.Row> */}\r\n            </Table.Body>\r\n          </Table>\r\n          <Divider />\r\n        </div>\r\n      </div>\r\n      <Divider />\r\n\r\n      <Header as=\"h2\" icon textAlign=\"center\">\r\n        <Icon name=\"wait\" circular />\r\n        <Header.Content>Pending Borrow Requests</Header.Content>\r\n\r\n      </Header>\r\n      <Button secondary onClick={checkBorrowRequest}>View Requests</Button>\r\n      <Divider />\r\n      <div>\r\n        <Card.Group centered>\r\n          {arrayDataBorrowDispDet.length > 0 &&\r\n            arrayDataBorrowDispDet.map((data, index) => {\r\n              return (\r\n                <Card>\r\n                  <Card.Content>\r\n                    <Icon name=\"handshake outline\" circular />\r\n                    <Card.Header>Borrow Request: {data.positionId} </Card.Header>\r\n                    <Card.Meta>Amount {data.amountBorrowed / 10e7} USD</Card.Meta>\r\n                    <Card.Meta>Status {data.isDone ? <Icon color='green' name='checkmark' size='large' /> : <Icon color='red' name='close' size='large' />}</Card.Meta>\r\n                    <Card.Description>Interest Rate {10} %</Card.Description>\r\n\r\n\r\n                  </Card.Content>\r\n\r\n                </Card>\r\n              );\r\n\r\n\r\n            })}\r\n        </Card.Group>\r\n        <div>\r\n          <Divider />\r\n          <Header as=\"h2\" icon textAlign=\"center\">\r\n            <Header.Content>Borrower Details </Header.Content>\r\n          </Header>\r\n          <Table color=\"black\" key={colors} inverted>\r\n            <Table.Header>\r\n              <Table.Row>\r\n                <Table.HeaderCell>Client ID</Table.HeaderCell>\r\n                <Table.HeaderCell>Amount Borrowed</Table.HeaderCell>\r\n                <Table.HeaderCell>Branch ID</Table.HeaderCell>\r\n                <Table.HeaderCell>Position ID</Table.HeaderCell>\r\n                <Table.HeaderCell>Status</Table.HeaderCell>\r\n                <Table.HeaderCell>Approved</Table.HeaderCell>\r\n\r\n              </Table.Row>\r\n            </Table.Header>\r\n\r\n            <Table.Body>\r\n              {arrayDataBorrowDispDet.length > 0 &&\r\n                arrayDataBorrowDispDet.map((data, index) => {\r\n                  // console.log(data[index]);\r\n                  return (\r\n                    <Table.Row key={index}>\r\n                      <Table.Cell>{data.clientId}</Table.Cell>\r\n                      <Table.Cell>{data.amountBorrowed / 10e7}</Table.Cell>\r\n                      <Table.Cell>{data.branchId}</Table.Cell>\r\n                      <Table.Cell>{data.positionId}</Table.Cell>\r\n                      <Table.Cell>{data.isBorrowed ? 'True' : 'False'}</Table.Cell>\r\n                      <Table.Cell>{data.isDone ? <Icon color='green' name='checkmark' size='large' /> : <Icon color='red' name='close' size='large' />}</Table.Cell>\r\n                      <Table.Cell>\r\n                        {\" \"}\r\n                        {data.isDone ? <Button color=\"green\" >Approved</Button> : <Button basic color=\"green\" onClick={processLoan}>Approve</Button>}\r\n                      </Table.Cell>\r\n                    </Table.Row>\r\n                  );\r\n                })}\r\n\r\n              {/* <Table.Row>\r\n      <Table.Cell>\"0x157840be5604f37284b00Ec5801B609710764566\"</Table.Cell>\r\n      <Table.Cell>{1000}</Table.Cell>\r\n      <Table.Cell>true</Table.Cell>\r\n    </Table.Row> */}\r\n            </Table.Body>\r\n          </Table>\r\n          <Divider />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nexport default Branch;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\abdul.mohammed\\\\Work\\\\Learn\\\\lvl_5\\\\Banking_dapp\\\\BankingSystem-Dapp\\\\src\\\\components\\\\Banks.js\",\n  _s = $RefreshSig$();\n/* This to be fixed in addbranch banks.call needs to be changed */\n\nimport React from \"react\";\nimport { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport { Button, Form } from \"semantic-ui-react\";\nimport { Header, Icon, Image, Segment, Divider, Table, Breadcrumb } from \"semantic-ui-react\";\nimport { contractAddressFed, ABIFed } from \"../constants\";\nimport { contractAddressEcb, ABIEcb } from \"../constants\";\nimport { contractAddressbnksys, ABIbnksys } from \"../constants\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst colors = ['black'];\nfunction Banks() {\n  _s();\n  const Web3 = require(\"web3\");\n  const ethers = require(\"ethers\");\n  const [bankid, setBankID] = useState(\"\");\n  const [branchaddress, setBranchAddress] = useState(\"\");\n  const [amount, setAmount] = useState(\"\");\n  const [tokenSymbol, setTokenSymbol] = useState(\"\");\n  const [centralbankid, setCentralBankID] = useState(\"\");\n  const [bankAdded, setBankAdded] = useState(false);\n  const [arrayData, setArrayData] = useState([]);\n  useEffect(() => {\n    if (bankAdded) {\n      setBankAdded(true);\n    } else {\n      setBankAdded(false);\n    }\n    let temp_data = window.localStorage.getItem(\"DataB\");\n    if (temp_data) {\n      temp_data = JSON.parse(temp_data);\n      setArrayData(temp_data);\n    }\n    window.localStorage.clear();\n  }, [arrayData]);\n  async function addbranch() {\n    try {\n      if (typeof window !== \"undefined\" && typeof window.ethereum !== \"undefined\") {\n        const accounts = await window.ethereum.enable();\n        console.log(\"accounts\", accounts);\n        const provider = await new ethers.providers.Web3Provider(window.ethereum);\n        const signer = await provider.getSigner();\n        console.log(\"Signer\", signer);\n        const address = await signer.getAddress();\n        console.log(address);\n      } else {\n        console.log(\"MemtaMask Not Installed Maen\");\n      }\n      const web3eth = new Web3(Web3.givenProvider);\n      const callContract = new web3eth.eth.Contract(ABIbnksys, contractAddressbnksys);\n      const callContractECB = new web3eth.eth.Contract(ABIEcb, contractAddressEcb);\n      const callContractFED = new web3eth.eth.Contract(ABIFed, contractAddressFed);\n      if (web3eth.givenProvider) {\n        console.log(\"Hello Provider Here\", web3eth.givenProvider);\n        let address = web3eth.givenProvider.selectedAddress;\n        console.log(\"address\", address);\n        if (bankid == 0) {\n          setTokenSymbol(\"EUR\");\n          let responseEcb = await callContractECB.methods.approve(contractAddressbnksys, amount * 100000000).send({\n            from: address,\n            gas: 1000000\n          });\n          let response = await callContract.methods.addBranch(bankid, branchaddress, amount * 100000000, tokenSymbol).send({\n            from: address,\n            gas: 1000000\n          });\n          console.log(\"Response from addbank:\", response);\n          let branchCount1 = await callContract.methods.branchCount(0).call();\n          let branchdetails1 = await callContract.methods.branches(0, branchCount1 - 1).call();\n          console.log(\"Response from addbank:\", branchCount1);\n          console.log(\"call bank:\", branchdetails1);\n          let tmp_data = arrayData;\n          tmp_data.push(branchdetails1);\n          console.log(tmp_data);\n          setArrayData(tmp_data);\n          window.localStorage.setItem(\"DataB\", JSON.stringify(tmp_data));\n          console.log(\"arrayData:\", arrayData);\n          console.log(\"arrayData:\", arrayData[0].amount);\n          console.log(\"arrayData:\", arrayData[0].bank);\n        } else {\n          setTokenSymbol(\"USD\");\n          let responseFed = await callContractFED.methods.approve(contractAddressbnksys, amount * 100000000).send({\n            from: address,\n            gas: 1000000\n          });\n          console.log(\"Response :\", responseFed);\n          let response = await callContract.methods.addBranch(bankid, branchaddress, amount * 100000000, tokenSymbol).send({\n            from: address,\n            gas: 1000000\n          });\n          console.log(response);\n          let branchCount2 = await callContract.methods.branchCount(1).call();\n          let branchdetails2 = await callContract.methods.branches(1, branchCount2 - 1).call();\n          console.log(\"Response from addbank:\", branchCount2);\n          console.log(\"call bank:\", branchdetails2);\n          let tmp_data = arrayData;\n          tmp_data.push(branchdetails2);\n          console.log(tmp_data);\n          setArrayData(tmp_data);\n          window.localStorage.setItem(\"DataB\", JSON.stringify(tmp_data));\n          console.log(\"arrayData:\", arrayData);\n          // console.log(\"arrayData:\", arrayData[0].amount);\n          // console.log(\"arrayData:\", arrayData[0].bank);\n        }\n      }\n    } catch (error) {\n      console.log(Error);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        as: \"h2\",\n        icon: true,\n        textAlign: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(Icon, {\n          name: \"building outline\",\n          circular: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Header.Content, {\n          children: \" Bank\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Image, {\n        centered: true,\n        size: \"large\",\n        src: \"https://react.semantic-ui.com/images/wireframe/centered-paragraph.png\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Form, {\n      unstackable: true,\n      children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n        widths: 2,\n        children: [/*#__PURE__*/_jsxDEV(Form.Input, {\n          label: \"Branch Address\",\n          placeholder: \"0xfsc257d...\",\n          type: \"text\",\n          value: branchaddress,\n          onChange: e => setBranchAddress(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n          label: \"Amount\",\n          placeholder: \"1000...\",\n          type: \"text\",\n          value: amount,\n          onChange: e => setAmount(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form.Input, {\n          label: \"Bank ID\",\n          placeholder: \"0\",\n          type: \"text\",\n          value: bankid,\n          onChange: e => setBankID(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        type: \"submit\",\n        onClick: addbranch,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        color: \"black\",\n        inverted: true,\n        children: [/*#__PURE__*/_jsxDEV(Table.Header, {\n          children: /*#__PURE__*/_jsxDEV(Table.Row, {\n            children: [/*#__PURE__*/_jsxDEV(Table.HeaderCell, {\n              children: \"Branch Address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Table.HeaderCell, {\n              children: \"Amount\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Table.HeaderCell, {\n              children: \"Approved\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Table.Body, {\n          children: arrayData.length > 0 && arrayData.map((data, index) => {\n            console.log(data[index]);\n            return /*#__PURE__*/_jsxDEV(Table.Row, {\n              children: [/*#__PURE__*/_jsxDEV(Table.Cell, {\n                children: data.branch\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 195,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Table.Cell, {\n                children: [data.amount / 10e7, \" \", data.tokenSymbol]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Table.Cell, {\n                children: data.status ? 'True' : 'True'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 21\n              }, this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 19\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 11\n        }, this)]\n      }, colors, true, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 145,\n    columnNumber: 5\n  }, this);\n}\n_s(Banks, \"BTTBsZSfPclOa4VYoOSMIqQlGW0=\");\n_c = Banks;\nexport default Banks;\nvar _c;\n$RefreshReg$(_c, \"Banks\");","map":{"version":3,"names":["React","useEffect","useState","Button","Form","Header","Icon","Image","Segment","Divider","Table","Breadcrumb","contractAddressFed","ABIFed","contractAddressEcb","ABIEcb","contractAddressbnksys","ABIbnksys","colors","Banks","Web3","require","ethers","bankid","setBankID","branchaddress","setBranchAddress","amount","setAmount","tokenSymbol","setTokenSymbol","centralbankid","setCentralBankID","bankAdded","setBankAdded","arrayData","setArrayData","temp_data","window","localStorage","getItem","JSON","parse","clear","addbranch","ethereum","accounts","enable","console","log","provider","providers","Web3Provider","signer","getSigner","address","getAddress","web3eth","givenProvider","callContract","eth","Contract","callContractECB","callContractFED","selectedAddress","responseEcb","methods","approve","send","from","gas","response","addBranch","branchCount1","branchCount","call","branchdetails1","branches","tmp_data","push","setItem","stringify","bank","responseFed","branchCount2","branchdetails2","error","Error","e","target","value","length","map","data","index","branch","status"],"sources":["C:/Users/abdul.mohammed/Work/Learn/lvl_5/Banking_dapp/BankingSystem-Dapp/src/components/Banks.js"],"sourcesContent":["/* This to be fixed in addbranch banks.call needs to be changed */\r\n\r\nimport React from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport { useState } from \"react\";\r\nimport { Button, Form } from \"semantic-ui-react\";\r\nimport { Header, Icon, Image, Segment, Divider, Table, Breadcrumb } from \"semantic-ui-react\";\r\nimport { contractAddressFed, ABIFed } from \"../constants\";\r\nimport { contractAddressEcb, ABIEcb } from \"../constants\";\r\nimport { contractAddressbnksys, ABIbnksys } from \"../constants\";\r\nconst colors = [\r\n  'black'\r\n]\r\n\r\nfunction Banks() {\r\n\r\n  const Web3 = require(\"web3\");\r\n  const ethers = require(\"ethers\");\r\n\r\n  const [bankid, setBankID] = useState(\"\");\r\n  const [branchaddress, setBranchAddress] = useState(\"\");\r\n  const [amount, setAmount] = useState(\"\");\r\n  const [tokenSymbol, setTokenSymbol] = useState(\"\");\r\n  const [centralbankid, setCentralBankID] = useState(\"\");\r\n  const [bankAdded, setBankAdded] = useState(false);\r\n  const [arrayData, setArrayData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (bankAdded) { setBankAdded(true) }\r\n    else { setBankAdded(false) }\r\n\r\n\r\n    let temp_data = window.localStorage.getItem(\"DataB\")\r\n    if (temp_data) {\r\n      temp_data = JSON.parse(temp_data)\r\n      setArrayData(temp_data)\r\n    }\r\n\r\n    window.localStorage.clear()\r\n\r\n  }, [arrayData]\r\n  );\r\n  async function addbranch() {\r\n    try {\r\n      if (\r\n        typeof window !== \"undefined\" &&\r\n        typeof window.ethereum !== \"undefined\"\r\n      ) {\r\n        const accounts = await window.ethereum.enable();\r\n        console.log(\"accounts\", accounts);\r\n        const provider = await new ethers.providers.Web3Provider(\r\n          window.ethereum\r\n        );\r\n        const signer = await provider.getSigner();\r\n        console.log(\"Signer\", signer);\r\n        const address = await signer.getAddress();\r\n        console.log(address);\r\n      } else {\r\n        console.log(\"MemtaMask Not Installed Maen\");\r\n      }\r\n      const web3eth = new Web3(Web3.givenProvider);\r\n\r\n      const callContract = new web3eth.eth.Contract(\r\n        ABIbnksys,\r\n        contractAddressbnksys\r\n      );\r\n      const callContractECB = new web3eth.eth.Contract(ABIEcb, contractAddressEcb);\r\n      const callContractFED = new web3eth.eth.Contract(ABIFed, contractAddressFed);\r\n      if (web3eth.givenProvider) {\r\n        console.log(\"Hello Provider Here\", web3eth.givenProvider);\r\n        let address = web3eth.givenProvider.selectedAddress;\r\n        console.log(\"address\", address);\r\n\r\n        if (bankid == 0) {\r\n          setTokenSymbol(\"EUR\")\r\n          let responseEcb = await callContractECB.methods.approve(contractAddressbnksys, amount * 100000000).send({ from: address, gas: 1000000 });\r\n          let response = await callContract.methods\r\n            .addBranch(bankid, branchaddress, amount * 100000000, tokenSymbol)\r\n            .send({ from: address, gas: 1000000 })\r\n          console.log(\"Response from addbank:\", response)\r\n\r\n          let branchCount1 = await callContract.methods\r\n            .branchCount(0)\r\n            .call();\r\n\r\n          let branchdetails1 = await callContract.methods\r\n            .branches(0, branchCount1 - 1)\r\n            .call();\r\n\r\n          console.log(\"Response from addbank:\", branchCount1)\r\n          console.log(\"call bank:\", branchdetails1)\r\n\r\n\r\n          let tmp_data = arrayData;\r\n          tmp_data.push(branchdetails1)\r\n          console.log(tmp_data)\r\n          setArrayData(tmp_data)\r\n          window.localStorage.setItem(\"DataB\", JSON.stringify(tmp_data))\r\n          console.log(\"arrayData:\", arrayData);\r\n          console.log(\"arrayData:\", arrayData[0].amount);\r\n          console.log(\"arrayData:\", arrayData[0].bank);\r\n        }\r\n        else {\r\n\r\n          setTokenSymbol(\"USD\")\r\n          let responseFed = await callContractFED.methods\r\n            .approve(contractAddressbnksys, amount * 100000000)\r\n            .send({ from: address, gas: 1000000 });\r\n          console.log(\"Response :\", responseFed);\r\n          let response = await callContract.methods\r\n            .addBranch(bankid, branchaddress, amount * 100000000, tokenSymbol)\r\n            .send({ from: address, gas: 1000000 })\r\n          console.log(response)\r\n\r\n          let branchCount2 = await callContract.methods\r\n            .branchCount(1)\r\n            .call();\r\n\r\n          let branchdetails2 = await callContract.methods\r\n            .branches(1, branchCount2 - 1)\r\n            .call();\r\n\r\n\r\n          console.log(\"Response from addbank:\", branchCount2)\r\n          console.log(\"call bank:\", branchdetails2)\r\n\r\n\r\n          let tmp_data = arrayData;\r\n          tmp_data.push(branchdetails2)\r\n          console.log(tmp_data)\r\n          setArrayData(tmp_data)\r\n          window.localStorage.setItem(\"DataB\", JSON.stringify(tmp_data))\r\n          console.log(\"arrayData:\", arrayData);\r\n          // console.log(\"arrayData:\", arrayData[0].amount);\r\n          // console.log(\"arrayData:\", arrayData[0].bank);\r\n        }\r\n      }\r\n    } catch (error) {\r\n      console.log(Error);\r\n    }\r\n\r\n  }\r\n\r\n  return (\r\n    <div>\r\n\r\n      <div>\r\n        <Header as=\"h2\" icon textAlign=\"center\">\r\n          <Icon name=\"building outline\" circular />\r\n          <Header.Content> Bank</Header.Content>\r\n        </Header>\r\n        <Image\r\n          centered\r\n          size=\"large\"\r\n          src=\"https://react.semantic-ui.com/images/wireframe/centered-paragraph.png\"\r\n        />\r\n\r\n      </div>\r\n\r\n      <Form unstackable>\r\n        <Form.Group widths={2}>\r\n          <Form.Input label=\"Branch Address\" placeholder=\"0xfsc257d...\" type=\"text\"\r\n            value={branchaddress}\r\n            onChange={(e) => setBranchAddress(e.target.value)} />\r\n          <Form.Input label=\"Amount\" placeholder=\"1000...\" type=\"text\"\r\n            value={amount}\r\n            onChange={(e) => setAmount(e.target.value)} />\r\n          <Form.Input label=\"Bank ID\" placeholder=\"0\" type=\"text\"\r\n            value={bankid}\r\n            onChange={(e) => setBankID(e.target.value)} />\r\n\r\n        </Form.Group>\r\n\r\n        <Button type=\"submit\" onClick={addbranch}>Submit</Button>\r\n      </Form>\r\n      <Divider/>\r\n      <div>\r\n\r\n        <Table color='black' key={colors} inverted>\r\n          <Table.Header>\r\n            <Table.Row>\r\n              <Table.HeaderCell>Branch Address</Table.HeaderCell>\r\n              <Table.HeaderCell>Amount</Table.HeaderCell>\r\n              <Table.HeaderCell>Approved</Table.HeaderCell>\r\n            </Table.Row>\r\n          </Table.Header>\r\n\r\n          <Table.Body>\r\n            {\r\n              (arrayData.length > 0) &&\r\n              arrayData.map((data, index) => {\r\n                console.log(data[index]);\r\n                return (\r\n                  <Table.Row key={index}>\r\n                    <Table.Cell>{data.branch}</Table.Cell>\r\n                    <Table.Cell>{data.amount / 10e7} {data.tokenSymbol}</Table.Cell>\r\n                    <Table.Cell>{data.status ? 'True' : 'True'}</Table.Cell>\r\n                  </Table.Row>\r\n                )\r\n              }\r\n              )}\r\n\r\n          </Table.Body>\r\n        </Table>\r\n\r\n      </div>\r\n\r\n\r\n\r\n      <div>\r\n        {/* <Segment inverted>\r\n    <Image src='https://react.semantic-ui.com/images/wireframe/short-paragraph.png' />\r\n    <Divider inverted />\r\n\r\n  </Segment> */}\r\n      </div>\r\n    </div>\r\n\r\n  );\r\n}\r\nexport default Banks;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}